// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RegisterReq.proto

#ifndef PROTOBUF_RegisterReq_2eproto__INCLUDED
#define PROTOBUF_RegisterReq_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace bean {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_RegisterReq_2eproto();
void protobuf_InitDefaults_RegisterReq_2eproto();
void protobuf_AssignDesc_RegisterReq_2eproto();
void protobuf_ShutdownFile_RegisterReq_2eproto();

class RegisterReq;

// ===================================================================

class RegisterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bean.RegisterReq) */ {
 public:
  RegisterReq();
  virtual ~RegisterReq();

  RegisterReq(const RegisterReq& from);

  inline RegisterReq& operator=(const RegisterReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterReq& default_instance();

  static const RegisterReq* internal_default_instance();

  void Swap(RegisterReq* other);

  // implements Message ----------------------------------------------

  inline RegisterReq* New() const { return New(NULL); }

  RegisterReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegisterReq& from);
  void MergeFrom(const RegisterReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RegisterReq* other);
  void UnsafeMergeFrom(const RegisterReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 telephone = 1;
  void clear_telephone();
  static const int kTelephoneFieldNumber = 1;
  ::google::protobuf::int64 telephone() const;
  void set_telephone(::google::protobuf::int64 value);

  // optional string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string re_password = 3;
  void clear_re_password();
  static const int kRePasswordFieldNumber = 3;
  const ::std::string& re_password() const;
  void set_re_password(const ::std::string& value);
  void set_re_password(const char* value);
  void set_re_password(const char* value, size_t size);
  ::std::string* mutable_re_password();
  ::std::string* release_re_password();
  void set_allocated_re_password(::std::string* re_password);

  // optional string os = 4;
  void clear_os();
  static const int kOsFieldNumber = 4;
  const ::std::string& os() const;
  void set_os(const ::std::string& value);
  void set_os(const char* value);
  void set_os(const char* value, size_t size);
  ::std::string* mutable_os();
  ::std::string* release_os();
  void set_allocated_os(::std::string* os);

  // @@protoc_insertion_point(class_scope:bean.RegisterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr re_password_;
  ::google::protobuf::internal::ArenaStringPtr os_;
  ::google::protobuf::int64 telephone_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_RegisterReq_2eproto_impl();
  friend void  protobuf_AddDesc_RegisterReq_2eproto_impl();
  friend void protobuf_AssignDesc_RegisterReq_2eproto();
  friend void protobuf_ShutdownFile_RegisterReq_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RegisterReq> RegisterReq_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterReq

// optional int64 telephone = 1;
inline void RegisterReq::clear_telephone() {
  telephone_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RegisterReq::telephone() const {
  // @@protoc_insertion_point(field_get:bean.RegisterReq.telephone)
  return telephone_;
}
inline void RegisterReq::set_telephone(::google::protobuf::int64 value) {
  
  telephone_ = value;
  // @@protoc_insertion_point(field_set:bean.RegisterReq.telephone)
}

// optional string password = 2;
inline void RegisterReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterReq::password() const {
  // @@protoc_insertion_point(field_get:bean.RegisterReq.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.RegisterReq.password)
}
inline void RegisterReq::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.RegisterReq.password)
}
inline void RegisterReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.RegisterReq.password)
}
inline ::std::string* RegisterReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:bean.RegisterReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterReq::release_password() {
  // @@protoc_insertion_point(field_release:bean.RegisterReq.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:bean.RegisterReq.password)
}

// optional string re_password = 3;
inline void RegisterReq::clear_re_password() {
  re_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterReq::re_password() const {
  // @@protoc_insertion_point(field_get:bean.RegisterReq.re_password)
  return re_password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterReq::set_re_password(const ::std::string& value) {
  
  re_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.RegisterReq.re_password)
}
inline void RegisterReq::set_re_password(const char* value) {
  
  re_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.RegisterReq.re_password)
}
inline void RegisterReq::set_re_password(const char* value, size_t size) {
  
  re_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.RegisterReq.re_password)
}
inline ::std::string* RegisterReq::mutable_re_password() {
  
  // @@protoc_insertion_point(field_mutable:bean.RegisterReq.re_password)
  return re_password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterReq::release_re_password() {
  // @@protoc_insertion_point(field_release:bean.RegisterReq.re_password)
  
  return re_password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterReq::set_allocated_re_password(::std::string* re_password) {
  if (re_password != NULL) {
    
  } else {
    
  }
  re_password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), re_password);
  // @@protoc_insertion_point(field_set_allocated:bean.RegisterReq.re_password)
}

// optional string os = 4;
inline void RegisterReq::clear_os() {
  os_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterReq::os() const {
  // @@protoc_insertion_point(field_get:bean.RegisterReq.os)
  return os_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterReq::set_os(const ::std::string& value) {
  
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.RegisterReq.os)
}
inline void RegisterReq::set_os(const char* value) {
  
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.RegisterReq.os)
}
inline void RegisterReq::set_os(const char* value, size_t size) {
  
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.RegisterReq.os)
}
inline ::std::string* RegisterReq::mutable_os() {
  
  // @@protoc_insertion_point(field_mutable:bean.RegisterReq.os)
  return os_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterReq::release_os() {
  // @@protoc_insertion_point(field_release:bean.RegisterReq.os)
  
  return os_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterReq::set_allocated_os(::std::string* os) {
  if (os != NULL) {
    
  } else {
    
  }
  os_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), os);
  // @@protoc_insertion_point(field_set_allocated:bean.RegisterReq.os)
}

inline const RegisterReq* RegisterReq::internal_default_instance() {
  return &RegisterReq_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace bean

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RegisterReq_2eproto__INCLUDED
