// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ReturnData.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ReturnData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bean {

namespace {

const ::google::protobuf::Descriptor* UserInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* BalanceInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BalanceInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* WelfareInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WelfareInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* FanInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FanInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShopLocationReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShopLocationReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShopLocationRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShopLocationRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShopLocationRsp_ShopInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShopLocationRsp_ShopInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShopDetailReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShopDetailReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShopDetailRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShopDetailRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShopDetailRsp_CommodityInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShopDetailRsp_CommodityInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ReturnData_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ReturnData_2eproto() {
  protobuf_AddDesc_ReturnData_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ReturnData.proto");
  GOOGLE_CHECK(file != NULL);
  UserInfo_descriptor_ = file->message_type(0);
  static const int UserInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, nick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, portrait_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, signature_),
  };
  UserInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserInfo_descriptor_,
      UserInfo::internal_default_instance(),
      UserInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(UserInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _internal_metadata_));
  BalanceInfo_descriptor_ = file->message_type(1);
  static const int BalanceInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BalanceInfo, fixed_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BalanceInfo, withdraw_money_),
  };
  BalanceInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BalanceInfo_descriptor_,
      BalanceInfo::internal_default_instance(),
      BalanceInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(BalanceInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BalanceInfo, _internal_metadata_));
  WelfareInfo_descriptor_ = file->message_type(2);
  static const int WelfareInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareInfo, welfare_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareInfo, rank_),
  };
  WelfareInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WelfareInfo_descriptor_,
      WelfareInfo::internal_default_instance(),
      WelfareInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(WelfareInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WelfareInfo, _internal_metadata_));
  FanInfo_descriptor_ = file->message_type(3);
  static const int FanInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FanInfo, fan_level_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FanInfo, fan_level_2_),
  };
  FanInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FanInfo_descriptor_,
      FanInfo::internal_default_instance(),
      FanInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(FanInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FanInfo, _internal_metadata_));
  LoginRsp_descriptor_ = file->message_type(4);
  static const int LoginRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp, user_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp, balance_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp, welfare_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp, fan_info_),
  };
  LoginRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginRsp_descriptor_,
      LoginRsp::internal_default_instance(),
      LoginRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoginRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRsp, _internal_metadata_));
  ShopLocationReq_descriptor_ = file->message_type(5);
  static const int ShopLocationReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopLocationReq, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopLocationReq, latitude_),
  };
  ShopLocationReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ShopLocationReq_descriptor_,
      ShopLocationReq::internal_default_instance(),
      ShopLocationReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(ShopLocationReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopLocationReq, _internal_metadata_));
  ShopLocationRsp_descriptor_ = file->message_type(6);
  static const int ShopLocationRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopLocationRsp, shop_info_),
  };
  ShopLocationRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ShopLocationRsp_descriptor_,
      ShopLocationRsp::internal_default_instance(),
      ShopLocationRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(ShopLocationRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopLocationRsp, _internal_metadata_));
  ShopLocationRsp_ShopInfo_descriptor_ = ShopLocationRsp_descriptor_->nested_type(0);
  static const int ShopLocationRsp_ShopInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopLocationRsp_ShopInfo, shop_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopLocationRsp_ShopInfo, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopLocationRsp_ShopInfo, latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopLocationRsp_ShopInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopLocationRsp_ShopInfo, icon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopLocationRsp_ShopInfo, type_),
  };
  ShopLocationRsp_ShopInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ShopLocationRsp_ShopInfo_descriptor_,
      ShopLocationRsp_ShopInfo::internal_default_instance(),
      ShopLocationRsp_ShopInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(ShopLocationRsp_ShopInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopLocationRsp_ShopInfo, _internal_metadata_));
  ShopDetailReq_descriptor_ = file->message_type(7);
  static const int ShopDetailReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopDetailReq, shop_id_),
  };
  ShopDetailReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ShopDetailReq_descriptor_,
      ShopDetailReq::internal_default_instance(),
      ShopDetailReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(ShopDetailReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopDetailReq, _internal_metadata_));
  ShopDetailRsp_descriptor_ = file->message_type(8);
  static const int ShopDetailRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopDetailRsp, top_icon_urls_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopDetailRsp, intro_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopDetailRsp, commodity_info_),
  };
  ShopDetailRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ShopDetailRsp_descriptor_,
      ShopDetailRsp::internal_default_instance(),
      ShopDetailRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(ShopDetailRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopDetailRsp, _internal_metadata_));
  ShopDetailRsp_CommodityInfo_descriptor_ = ShopDetailRsp_descriptor_->nested_type(0);
  static const int ShopDetailRsp_CommodityInfo_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopDetailRsp_CommodityInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopDetailRsp_CommodityInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopDetailRsp_CommodityInfo, icon_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopDetailRsp_CommodityInfo, intro_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopDetailRsp_CommodityInfo, original_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopDetailRsp_CommodityInfo, dis_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopDetailRsp_CommodityInfo, discount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopDetailRsp_CommodityInfo, return_count_),
  };
  ShopDetailRsp_CommodityInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ShopDetailRsp_CommodityInfo_descriptor_,
      ShopDetailRsp_CommodityInfo::internal_default_instance(),
      ShopDetailRsp_CommodityInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(ShopDetailRsp_CommodityInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopDetailRsp_CommodityInfo, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ReturnData_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserInfo_descriptor_, UserInfo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BalanceInfo_descriptor_, BalanceInfo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WelfareInfo_descriptor_, WelfareInfo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FanInfo_descriptor_, FanInfo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginRsp_descriptor_, LoginRsp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ShopLocationReq_descriptor_, ShopLocationReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ShopLocationRsp_descriptor_, ShopLocationRsp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ShopLocationRsp_ShopInfo_descriptor_, ShopLocationRsp_ShopInfo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ShopDetailReq_descriptor_, ShopDetailReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ShopDetailRsp_descriptor_, ShopDetailRsp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ShopDetailRsp_CommodityInfo_descriptor_, ShopDetailRsp_CommodityInfo::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ReturnData_2eproto() {
  UserInfo_default_instance_.Shutdown();
  delete UserInfo_reflection_;
  BalanceInfo_default_instance_.Shutdown();
  delete BalanceInfo_reflection_;
  WelfareInfo_default_instance_.Shutdown();
  delete WelfareInfo_reflection_;
  FanInfo_default_instance_.Shutdown();
  delete FanInfo_reflection_;
  LoginRsp_default_instance_.Shutdown();
  delete LoginRsp_reflection_;
  ShopLocationReq_default_instance_.Shutdown();
  delete ShopLocationReq_reflection_;
  ShopLocationRsp_default_instance_.Shutdown();
  delete ShopLocationRsp_reflection_;
  ShopLocationRsp_ShopInfo_default_instance_.Shutdown();
  delete ShopLocationRsp_ShopInfo_reflection_;
  ShopDetailReq_default_instance_.Shutdown();
  delete ShopDetailReq_reflection_;
  ShopDetailRsp_default_instance_.Shutdown();
  delete ShopDetailRsp_reflection_;
  ShopDetailRsp_CommodityInfo_default_instance_.Shutdown();
  delete ShopDetailRsp_CommodityInfo_reflection_;
}

void protobuf_InitDefaults_ReturnData_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  UserInfo_default_instance_.DefaultConstruct();
  BalanceInfo_default_instance_.DefaultConstruct();
  WelfareInfo_default_instance_.DefaultConstruct();
  FanInfo_default_instance_.DefaultConstruct();
  LoginRsp_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ShopLocationReq_default_instance_.DefaultConstruct();
  ShopLocationRsp_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ShopLocationRsp_ShopInfo_default_instance_.DefaultConstruct();
  ShopDetailReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ShopDetailRsp_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ShopDetailRsp_CommodityInfo_default_instance_.DefaultConstruct();
  UserInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
  BalanceInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
  WelfareInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
  FanInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
  LoginRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
  ShopLocationReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  ShopLocationRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
  ShopLocationRsp_ShopInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
  ShopDetailReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  ShopDetailRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
  ShopDetailRsp_CommodityInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_ReturnData_2eproto_once_);
void protobuf_InitDefaults_ReturnData_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_ReturnData_2eproto_once_,
                 &protobuf_InitDefaults_ReturnData_2eproto_impl);
}
void protobuf_AddDesc_ReturnData_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_ReturnData_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020ReturnData.proto\022\004bean\"k\n\010UserInfo\022\016\n\006"
    "status\030\001 \001(\005\022\017\n\007user_id\030\002 \001(\003\022\014\n\004nick\030\003 "
    "\001(\t\022\013\n\003sex\030\004 \001(\005\022\020\n\010portrait\030\005 \001(\t\022\021\n\tsi"
    "gnature\030\006 \001(\t\":\n\013BalanceInfo\022\023\n\013fixed_mo"
    "ney\030\001 \001(\003\022\026\n\016withdraw_money\030\002 \001(\003\",\n\013Wel"
    "fareInfo\022\017\n\007welfare\030\001 \001(\003\022\014\n\004rank\030\002 \001(\003\""
    "3\n\007FanInfo\022\023\n\013fan_level_1\030\001 \001(\003\022\023\n\013fan_l"
    "evel_2\030\002 \001(\003\"\240\001\n\010LoginRsp\022!\n\tuser_info\030\001"
    " \001(\0132\016.bean.UserInfo\022\'\n\014balance_info\030\002 \001"
    "(\0132\021.bean.BalanceInfo\022\'\n\014welfare_info\030\003 "
    "\001(\0132\021.bean.WelfareInfo\022\037\n\010fan_info\030\004 \001(\013"
    "2\r.bean.FanInfo\"6\n\017ShopLocationReq\022\021\n\tlo"
    "ngitude\030\001 \001(\t\022\020\n\010latitude\030\002 \001(\t\"\260\001\n\017Shop"
    "LocationRsp\0221\n\tshop_info\030\001 \003(\0132\036.bean.Sh"
    "opLocationRsp.ShopInfo\032j\n\010ShopInfo\022\017\n\007sh"
    "op_id\030\001 \001(\003\022\021\n\tlongitude\030\002 \001(\t\022\020\n\010latitu"
    "de\030\003 \001(\t\022\014\n\004name\030\004 \001(\t\022\014\n\004icon\030\005 \001(\t\022\014\n\004"
    "type\030\006 \001(\t\" \n\rShopDetailReq\022\017\n\007shop_id\030\001"
    " \001(\003\"\220\002\n\rShopDetailRsp\022\025\n\rtop_icon_urls\030"
    "\001 \003(\t\022\r\n\005intro\030\002 \001(\t\0229\n\016commodity_info\030\003"
    " \003(\0132!.bean.ShopDetailRsp.CommodityInfo\032"
    "\235\001\n\rCommodityInfo\022\n\n\002id\030\001 \001(\003\022\014\n\004name\030\002 "
    "\001(\t\022\020\n\010icon_url\030\003 \001(\t\022\r\n\005intro\030\004 \001(\t\022\026\n\016"
    "original_price\030\005 \001(\t\022\021\n\tdis_price\030\006 \001(\t\022"
    "\020\n\010discount\030\007 \001(\t\022\024\n\014return_count\030\010 \001(\tB"
    "*\n(com.liongjfuan.android_distribution.b"
    "eanb\006proto3", 1051);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ReturnData.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ReturnData_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_ReturnData_2eproto_once_);
void protobuf_AddDesc_ReturnData_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_ReturnData_2eproto_once_,
                 &protobuf_AddDesc_ReturnData_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ReturnData_2eproto {
  StaticDescriptorInitializer_ReturnData_2eproto() {
    protobuf_AddDesc_ReturnData_2eproto();
  }
} static_descriptor_initializer_ReturnData_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfo::kStatusFieldNumber;
const int UserInfo::kUserIdFieldNumber;
const int UserInfo::kNickFieldNumber;
const int UserInfo::kSexFieldNumber;
const int UserInfo::kPortraitFieldNumber;
const int UserInfo::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfo::UserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ReturnData_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:bean.UserInfo)
}

void UserInfo::InitAsDefaultInstance() {
}

UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bean.UserInfo)
}

void UserInfo::SharedCtor() {
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portrait_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, reinterpret_cast<char*>(&sex_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(sex_));
  _cached_size_ = 0;
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:bean.UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portrait_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserInfo_descriptor_;
}

const UserInfo& UserInfo::default_instance() {
  protobuf_InitDefaults_ReturnData_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UserInfo> UserInfo_default_instance_;

UserInfo* UserInfo::New(::google::protobuf::Arena* arena) const {
  UserInfo* n = new UserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:bean.UserInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UserInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UserInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(user_id_, sex_);
  nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portrait_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool UserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bean.UserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_user_id;
        break;
      }

      // optional int64 user_id = 2;
      case 2: {
        if (tag == 16) {
         parse_user_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_nick;
        break;
      }

      // optional string nick = 3;
      case 3: {
        if (tag == 26) {
         parse_nick:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nick().data(), this->nick().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bean.UserInfo.nick"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sex;
        break;
      }

      // optional int32 sex = 4;
      case 4: {
        if (tag == 32) {
         parse_sex:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_portrait;
        break;
      }

      // optional string portrait = 5;
      case 5: {
        if (tag == 42) {
         parse_portrait:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portrait()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portrait().data(), this->portrait().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bean.UserInfo.portrait"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_signature;
        break;
      }

      // optional string signature = 6;
      case 6: {
        if (tag == 50) {
         parse_signature:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), this->signature().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bean.UserInfo.signature"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bean.UserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bean.UserInfo)
  return false;
#undef DO_
}

void UserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bean.UserInfo)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // optional int64 user_id = 2;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->user_id(), output);
  }

  // optional string nick = 3;
  if (this->nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick().data(), this->nick().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.UserInfo.nick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nick(), output);
  }

  // optional int32 sex = 4;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sex(), output);
  }

  // optional string portrait = 5;
  if (this->portrait().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portrait().data(), this->portrait().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.UserInfo.portrait");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->portrait(), output);
  }

  // optional string signature = 6;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.UserInfo.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->signature(), output);
  }

  // @@protoc_insertion_point(serialize_end:bean.UserInfo)
}

::google::protobuf::uint8* UserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bean.UserInfo)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // optional int64 user_id = 2;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->user_id(), target);
  }

  // optional string nick = 3;
  if (this->nick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick().data(), this->nick().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.UserInfo.nick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nick(), target);
  }

  // optional int32 sex = 4;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sex(), target);
  }

  // optional string portrait = 5;
  if (this->portrait().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portrait().data(), this->portrait().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.UserInfo.portrait");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->portrait(), target);
  }

  // optional string signature = 6;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.UserInfo.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->signature(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bean.UserInfo)
  return target;
}

size_t UserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bean.UserInfo)
  size_t total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // optional int64 user_id = 2;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->user_id());
  }

  // optional string nick = 3;
  if (this->nick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick());
  }

  // optional int32 sex = 4;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());
  }

  // optional string portrait = 5;
  if (this->portrait().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portrait());
  }

  // optional string signature = 6;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bean.UserInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bean.UserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bean.UserInfo)
    UnsafeMergeFrom(*source);
  }
}

void UserInfo::MergeFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bean.UserInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UserInfo::UnsafeMergeFrom(const UserInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.nick().size() > 0) {

    nick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_);
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
  if (from.portrait().size() > 0) {

    portrait_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portrait_);
  }
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
}

void UserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bean.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo::CopyFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bean.UserInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UserInfo::IsInitialized() const {

  return true;
}

void UserInfo::Swap(UserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfo::InternalSwap(UserInfo* other) {
  std::swap(status_, other->status_);
  std::swap(user_id_, other->user_id_);
  nick_.Swap(&other->nick_);
  std::swap(sex_, other->sex_);
  portrait_.Swap(&other->portrait_);
  signature_.Swap(&other->signature_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserInfo_descriptor_;
  metadata.reflection = UserInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserInfo

// optional int32 status = 1;
void UserInfo::clear_status() {
  status_ = 0;
}
::google::protobuf::int32 UserInfo::status() const {
  // @@protoc_insertion_point(field_get:bean.UserInfo.status)
  return status_;
}
void UserInfo::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:bean.UserInfo.status)
}

// optional int64 user_id = 2;
void UserInfo::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 UserInfo::user_id() const {
  // @@protoc_insertion_point(field_get:bean.UserInfo.user_id)
  return user_id_;
}
void UserInfo::set_user_id(::google::protobuf::int64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:bean.UserInfo.user_id)
}

// optional string nick = 3;
void UserInfo::clear_nick() {
  nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfo::nick() const {
  // @@protoc_insertion_point(field_get:bean.UserInfo.nick)
  return nick_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo::set_nick(const ::std::string& value) {
  
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.UserInfo.nick)
}
void UserInfo::set_nick(const char* value) {
  
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.UserInfo.nick)
}
void UserInfo::set_nick(const char* value, size_t size) {
  
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.UserInfo.nick)
}
::std::string* UserInfo::mutable_nick() {
  
  // @@protoc_insertion_point(field_mutable:bean.UserInfo.nick)
  return nick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfo::release_nick() {
  // @@protoc_insertion_point(field_release:bean.UserInfo.nick)
  
  return nick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo::set_allocated_nick(::std::string* nick) {
  if (nick != NULL) {
    
  } else {
    
  }
  nick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick);
  // @@protoc_insertion_point(field_set_allocated:bean.UserInfo.nick)
}

// optional int32 sex = 4;
void UserInfo::clear_sex() {
  sex_ = 0;
}
::google::protobuf::int32 UserInfo::sex() const {
  // @@protoc_insertion_point(field_get:bean.UserInfo.sex)
  return sex_;
}
void UserInfo::set_sex(::google::protobuf::int32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:bean.UserInfo.sex)
}

// optional string portrait = 5;
void UserInfo::clear_portrait() {
  portrait_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfo::portrait() const {
  // @@protoc_insertion_point(field_get:bean.UserInfo.portrait)
  return portrait_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo::set_portrait(const ::std::string& value) {
  
  portrait_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.UserInfo.portrait)
}
void UserInfo::set_portrait(const char* value) {
  
  portrait_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.UserInfo.portrait)
}
void UserInfo::set_portrait(const char* value, size_t size) {
  
  portrait_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.UserInfo.portrait)
}
::std::string* UserInfo::mutable_portrait() {
  
  // @@protoc_insertion_point(field_mutable:bean.UserInfo.portrait)
  return portrait_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfo::release_portrait() {
  // @@protoc_insertion_point(field_release:bean.UserInfo.portrait)
  
  return portrait_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo::set_allocated_portrait(::std::string* portrait) {
  if (portrait != NULL) {
    
  } else {
    
  }
  portrait_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), portrait);
  // @@protoc_insertion_point(field_set_allocated:bean.UserInfo.portrait)
}

// optional string signature = 6;
void UserInfo::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfo::signature() const {
  // @@protoc_insertion_point(field_get:bean.UserInfo.signature)
  return signature_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.UserInfo.signature)
}
void UserInfo::set_signature(const char* value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.UserInfo.signature)
}
void UserInfo::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.UserInfo.signature)
}
::std::string* UserInfo::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:bean.UserInfo.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfo::release_signature() {
  // @@protoc_insertion_point(field_release:bean.UserInfo.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:bean.UserInfo.signature)
}

inline const UserInfo* UserInfo::internal_default_instance() {
  return &UserInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BalanceInfo::kFixedMoneyFieldNumber;
const int BalanceInfo::kWithdrawMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BalanceInfo::BalanceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ReturnData_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:bean.BalanceInfo)
}

void BalanceInfo::InitAsDefaultInstance() {
}

BalanceInfo::BalanceInfo(const BalanceInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bean.BalanceInfo)
}

void BalanceInfo::SharedCtor() {
  ::memset(&fixed_money_, 0, reinterpret_cast<char*>(&withdraw_money_) -
    reinterpret_cast<char*>(&fixed_money_) + sizeof(withdraw_money_));
  _cached_size_ = 0;
}

BalanceInfo::~BalanceInfo() {
  // @@protoc_insertion_point(destructor:bean.BalanceInfo)
  SharedDtor();
}

void BalanceInfo::SharedDtor() {
}

void BalanceInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BalanceInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BalanceInfo_descriptor_;
}

const BalanceInfo& BalanceInfo::default_instance() {
  protobuf_InitDefaults_ReturnData_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BalanceInfo> BalanceInfo_default_instance_;

BalanceInfo* BalanceInfo::New(::google::protobuf::Arena* arena) const {
  BalanceInfo* n = new BalanceInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BalanceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:bean.BalanceInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BalanceInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BalanceInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(fixed_money_, withdraw_money_);

#undef ZR_HELPER_
#undef ZR_

}

bool BalanceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bean.BalanceInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 fixed_money = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fixed_money_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_withdraw_money;
        break;
      }

      // optional int64 withdraw_money = 2;
      case 2: {
        if (tag == 16) {
         parse_withdraw_money:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &withdraw_money_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bean.BalanceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bean.BalanceInfo)
  return false;
#undef DO_
}

void BalanceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bean.BalanceInfo)
  // optional int64 fixed_money = 1;
  if (this->fixed_money() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->fixed_money(), output);
  }

  // optional int64 withdraw_money = 2;
  if (this->withdraw_money() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->withdraw_money(), output);
  }

  // @@protoc_insertion_point(serialize_end:bean.BalanceInfo)
}

::google::protobuf::uint8* BalanceInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bean.BalanceInfo)
  // optional int64 fixed_money = 1;
  if (this->fixed_money() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->fixed_money(), target);
  }

  // optional int64 withdraw_money = 2;
  if (this->withdraw_money() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->withdraw_money(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bean.BalanceInfo)
  return target;
}

size_t BalanceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bean.BalanceInfo)
  size_t total_size = 0;

  // optional int64 fixed_money = 1;
  if (this->fixed_money() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->fixed_money());
  }

  // optional int64 withdraw_money = 2;
  if (this->withdraw_money() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->withdraw_money());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BalanceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bean.BalanceInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BalanceInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BalanceInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bean.BalanceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bean.BalanceInfo)
    UnsafeMergeFrom(*source);
  }
}

void BalanceInfo::MergeFrom(const BalanceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bean.BalanceInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BalanceInfo::UnsafeMergeFrom(const BalanceInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.fixed_money() != 0) {
    set_fixed_money(from.fixed_money());
  }
  if (from.withdraw_money() != 0) {
    set_withdraw_money(from.withdraw_money());
  }
}

void BalanceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bean.BalanceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BalanceInfo::CopyFrom(const BalanceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bean.BalanceInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BalanceInfo::IsInitialized() const {

  return true;
}

void BalanceInfo::Swap(BalanceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BalanceInfo::InternalSwap(BalanceInfo* other) {
  std::swap(fixed_money_, other->fixed_money_);
  std::swap(withdraw_money_, other->withdraw_money_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BalanceInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BalanceInfo_descriptor_;
  metadata.reflection = BalanceInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BalanceInfo

// optional int64 fixed_money = 1;
void BalanceInfo::clear_fixed_money() {
  fixed_money_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 BalanceInfo::fixed_money() const {
  // @@protoc_insertion_point(field_get:bean.BalanceInfo.fixed_money)
  return fixed_money_;
}
void BalanceInfo::set_fixed_money(::google::protobuf::int64 value) {
  
  fixed_money_ = value;
  // @@protoc_insertion_point(field_set:bean.BalanceInfo.fixed_money)
}

// optional int64 withdraw_money = 2;
void BalanceInfo::clear_withdraw_money() {
  withdraw_money_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 BalanceInfo::withdraw_money() const {
  // @@protoc_insertion_point(field_get:bean.BalanceInfo.withdraw_money)
  return withdraw_money_;
}
void BalanceInfo::set_withdraw_money(::google::protobuf::int64 value) {
  
  withdraw_money_ = value;
  // @@protoc_insertion_point(field_set:bean.BalanceInfo.withdraw_money)
}

inline const BalanceInfo* BalanceInfo::internal_default_instance() {
  return &BalanceInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WelfareInfo::kWelfareFieldNumber;
const int WelfareInfo::kRankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WelfareInfo::WelfareInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ReturnData_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:bean.WelfareInfo)
}

void WelfareInfo::InitAsDefaultInstance() {
}

WelfareInfo::WelfareInfo(const WelfareInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bean.WelfareInfo)
}

void WelfareInfo::SharedCtor() {
  ::memset(&welfare_, 0, reinterpret_cast<char*>(&rank_) -
    reinterpret_cast<char*>(&welfare_) + sizeof(rank_));
  _cached_size_ = 0;
}

WelfareInfo::~WelfareInfo() {
  // @@protoc_insertion_point(destructor:bean.WelfareInfo)
  SharedDtor();
}

void WelfareInfo::SharedDtor() {
}

void WelfareInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelfareInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WelfareInfo_descriptor_;
}

const WelfareInfo& WelfareInfo::default_instance() {
  protobuf_InitDefaults_ReturnData_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WelfareInfo> WelfareInfo_default_instance_;

WelfareInfo* WelfareInfo::New(::google::protobuf::Arena* arena) const {
  WelfareInfo* n = new WelfareInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WelfareInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:bean.WelfareInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(WelfareInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<WelfareInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(welfare_, rank_);

#undef ZR_HELPER_
#undef ZR_

}

bool WelfareInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bean.WelfareInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 welfare = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &welfare_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rank;
        break;
      }

      // optional int64 rank = 2;
      case 2: {
        if (tag == 16) {
         parse_rank:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bean.WelfareInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bean.WelfareInfo)
  return false;
#undef DO_
}

void WelfareInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bean.WelfareInfo)
  // optional int64 welfare = 1;
  if (this->welfare() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->welfare(), output);
  }

  // optional int64 rank = 2;
  if (this->rank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->rank(), output);
  }

  // @@protoc_insertion_point(serialize_end:bean.WelfareInfo)
}

::google::protobuf::uint8* WelfareInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bean.WelfareInfo)
  // optional int64 welfare = 1;
  if (this->welfare() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->welfare(), target);
  }

  // optional int64 rank = 2;
  if (this->rank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->rank(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bean.WelfareInfo)
  return target;
}

size_t WelfareInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bean.WelfareInfo)
  size_t total_size = 0;

  // optional int64 welfare = 1;
  if (this->welfare() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->welfare());
  }

  // optional int64 rank = 2;
  if (this->rank() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->rank());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelfareInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bean.WelfareInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WelfareInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WelfareInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bean.WelfareInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bean.WelfareInfo)
    UnsafeMergeFrom(*source);
  }
}

void WelfareInfo::MergeFrom(const WelfareInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bean.WelfareInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WelfareInfo::UnsafeMergeFrom(const WelfareInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.welfare() != 0) {
    set_welfare(from.welfare());
  }
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
}

void WelfareInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bean.WelfareInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelfareInfo::CopyFrom(const WelfareInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bean.WelfareInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WelfareInfo::IsInitialized() const {

  return true;
}

void WelfareInfo::Swap(WelfareInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WelfareInfo::InternalSwap(WelfareInfo* other) {
  std::swap(welfare_, other->welfare_);
  std::swap(rank_, other->rank_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WelfareInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WelfareInfo_descriptor_;
  metadata.reflection = WelfareInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WelfareInfo

// optional int64 welfare = 1;
void WelfareInfo::clear_welfare() {
  welfare_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 WelfareInfo::welfare() const {
  // @@protoc_insertion_point(field_get:bean.WelfareInfo.welfare)
  return welfare_;
}
void WelfareInfo::set_welfare(::google::protobuf::int64 value) {
  
  welfare_ = value;
  // @@protoc_insertion_point(field_set:bean.WelfareInfo.welfare)
}

// optional int64 rank = 2;
void WelfareInfo::clear_rank() {
  rank_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 WelfareInfo::rank() const {
  // @@protoc_insertion_point(field_get:bean.WelfareInfo.rank)
  return rank_;
}
void WelfareInfo::set_rank(::google::protobuf::int64 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:bean.WelfareInfo.rank)
}

inline const WelfareInfo* WelfareInfo::internal_default_instance() {
  return &WelfareInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FanInfo::kFanLevel1FieldNumber;
const int FanInfo::kFanLevel2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FanInfo::FanInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ReturnData_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:bean.FanInfo)
}

void FanInfo::InitAsDefaultInstance() {
}

FanInfo::FanInfo(const FanInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bean.FanInfo)
}

void FanInfo::SharedCtor() {
  ::memset(&fan_level_1_, 0, reinterpret_cast<char*>(&fan_level_2_) -
    reinterpret_cast<char*>(&fan_level_1_) + sizeof(fan_level_2_));
  _cached_size_ = 0;
}

FanInfo::~FanInfo() {
  // @@protoc_insertion_point(destructor:bean.FanInfo)
  SharedDtor();
}

void FanInfo::SharedDtor() {
}

void FanInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FanInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FanInfo_descriptor_;
}

const FanInfo& FanInfo::default_instance() {
  protobuf_InitDefaults_ReturnData_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FanInfo> FanInfo_default_instance_;

FanInfo* FanInfo::New(::google::protobuf::Arena* arena) const {
  FanInfo* n = new FanInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FanInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:bean.FanInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FanInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FanInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(fan_level_1_, fan_level_2_);

#undef ZR_HELPER_
#undef ZR_

}

bool FanInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bean.FanInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 fan_level_1 = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fan_level_1_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_fan_level_2;
        break;
      }

      // optional int64 fan_level_2 = 2;
      case 2: {
        if (tag == 16) {
         parse_fan_level_2:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fan_level_2_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bean.FanInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bean.FanInfo)
  return false;
#undef DO_
}

void FanInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bean.FanInfo)
  // optional int64 fan_level_1 = 1;
  if (this->fan_level_1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->fan_level_1(), output);
  }

  // optional int64 fan_level_2 = 2;
  if (this->fan_level_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->fan_level_2(), output);
  }

  // @@protoc_insertion_point(serialize_end:bean.FanInfo)
}

::google::protobuf::uint8* FanInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bean.FanInfo)
  // optional int64 fan_level_1 = 1;
  if (this->fan_level_1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->fan_level_1(), target);
  }

  // optional int64 fan_level_2 = 2;
  if (this->fan_level_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->fan_level_2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bean.FanInfo)
  return target;
}

size_t FanInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bean.FanInfo)
  size_t total_size = 0;

  // optional int64 fan_level_1 = 1;
  if (this->fan_level_1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->fan_level_1());
  }

  // optional int64 fan_level_2 = 2;
  if (this->fan_level_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->fan_level_2());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FanInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bean.FanInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FanInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FanInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bean.FanInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bean.FanInfo)
    UnsafeMergeFrom(*source);
  }
}

void FanInfo::MergeFrom(const FanInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bean.FanInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FanInfo::UnsafeMergeFrom(const FanInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.fan_level_1() != 0) {
    set_fan_level_1(from.fan_level_1());
  }
  if (from.fan_level_2() != 0) {
    set_fan_level_2(from.fan_level_2());
  }
}

void FanInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bean.FanInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FanInfo::CopyFrom(const FanInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bean.FanInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FanInfo::IsInitialized() const {

  return true;
}

void FanInfo::Swap(FanInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FanInfo::InternalSwap(FanInfo* other) {
  std::swap(fan_level_1_, other->fan_level_1_);
  std::swap(fan_level_2_, other->fan_level_2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FanInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FanInfo_descriptor_;
  metadata.reflection = FanInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FanInfo

// optional int64 fan_level_1 = 1;
void FanInfo::clear_fan_level_1() {
  fan_level_1_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 FanInfo::fan_level_1() const {
  // @@protoc_insertion_point(field_get:bean.FanInfo.fan_level_1)
  return fan_level_1_;
}
void FanInfo::set_fan_level_1(::google::protobuf::int64 value) {
  
  fan_level_1_ = value;
  // @@protoc_insertion_point(field_set:bean.FanInfo.fan_level_1)
}

// optional int64 fan_level_2 = 2;
void FanInfo::clear_fan_level_2() {
  fan_level_2_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 FanInfo::fan_level_2() const {
  // @@protoc_insertion_point(field_get:bean.FanInfo.fan_level_2)
  return fan_level_2_;
}
void FanInfo::set_fan_level_2(::google::protobuf::int64 value) {
  
  fan_level_2_ = value;
  // @@protoc_insertion_point(field_set:bean.FanInfo.fan_level_2)
}

inline const FanInfo* FanInfo::internal_default_instance() {
  return &FanInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRsp::kUserInfoFieldNumber;
const int LoginRsp::kBalanceInfoFieldNumber;
const int LoginRsp::kWelfareInfoFieldNumber;
const int LoginRsp::kFanInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRsp::LoginRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ReturnData_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:bean.LoginRsp)
}

void LoginRsp::InitAsDefaultInstance() {
  user_info_ = const_cast< ::bean::UserInfo*>(
      ::bean::UserInfo::internal_default_instance());
  balance_info_ = const_cast< ::bean::BalanceInfo*>(
      ::bean::BalanceInfo::internal_default_instance());
  welfare_info_ = const_cast< ::bean::WelfareInfo*>(
      ::bean::WelfareInfo::internal_default_instance());
  fan_info_ = const_cast< ::bean::FanInfo*>(
      ::bean::FanInfo::internal_default_instance());
}

LoginRsp::LoginRsp(const LoginRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bean.LoginRsp)
}

void LoginRsp::SharedCtor() {
  user_info_ = NULL;
  balance_info_ = NULL;
  welfare_info_ = NULL;
  fan_info_ = NULL;
  _cached_size_ = 0;
}

LoginRsp::~LoginRsp() {
  // @@protoc_insertion_point(destructor:bean.LoginRsp)
  SharedDtor();
}

void LoginRsp::SharedDtor() {
  if (this != &LoginRsp_default_instance_.get()) {
    delete user_info_;
    delete balance_info_;
    delete welfare_info_;
    delete fan_info_;
  }
}

void LoginRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginRsp_descriptor_;
}

const LoginRsp& LoginRsp::default_instance() {
  protobuf_InitDefaults_ReturnData_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LoginRsp> LoginRsp_default_instance_;

LoginRsp* LoginRsp::New(::google::protobuf::Arena* arena) const {
  LoginRsp* n = new LoginRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:bean.LoginRsp)
  if (GetArenaNoVirtual() == NULL && user_info_ != NULL) delete user_info_;
  user_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && balance_info_ != NULL) delete balance_info_;
  balance_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && welfare_info_ != NULL) delete welfare_info_;
  welfare_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && fan_info_ != NULL) delete fan_info_;
  fan_info_ = NULL;
}

bool LoginRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bean.LoginRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .bean.UserInfo user_info = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_balance_info;
        break;
      }

      // optional .bean.BalanceInfo balance_info = 2;
      case 2: {
        if (tag == 18) {
         parse_balance_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_balance_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_welfare_info;
        break;
      }

      // optional .bean.WelfareInfo welfare_info = 3;
      case 3: {
        if (tag == 26) {
         parse_welfare_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_welfare_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_fan_info;
        break;
      }

      // optional .bean.FanInfo fan_info = 4;
      case 4: {
        if (tag == 34) {
         parse_fan_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fan_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bean.LoginRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bean.LoginRsp)
  return false;
#undef DO_
}

void LoginRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bean.LoginRsp)
  // optional .bean.UserInfo user_info = 1;
  if (this->has_user_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->user_info_, output);
  }

  // optional .bean.BalanceInfo balance_info = 2;
  if (this->has_balance_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->balance_info_, output);
  }

  // optional .bean.WelfareInfo welfare_info = 3;
  if (this->has_welfare_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->welfare_info_, output);
  }

  // optional .bean.FanInfo fan_info = 4;
  if (this->has_fan_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->fan_info_, output);
  }

  // @@protoc_insertion_point(serialize_end:bean.LoginRsp)
}

::google::protobuf::uint8* LoginRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bean.LoginRsp)
  // optional .bean.UserInfo user_info = 1;
  if (this->has_user_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->user_info_, false, target);
  }

  // optional .bean.BalanceInfo balance_info = 2;
  if (this->has_balance_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->balance_info_, false, target);
  }

  // optional .bean.WelfareInfo welfare_info = 3;
  if (this->has_welfare_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->welfare_info_, false, target);
  }

  // optional .bean.FanInfo fan_info = 4;
  if (this->has_fan_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->fan_info_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bean.LoginRsp)
  return target;
}

size_t LoginRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bean.LoginRsp)
  size_t total_size = 0;

  // optional .bean.UserInfo user_info = 1;
  if (this->has_user_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->user_info_);
  }

  // optional .bean.BalanceInfo balance_info = 2;
  if (this->has_balance_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->balance_info_);
  }

  // optional .bean.WelfareInfo welfare_info = 3;
  if (this->has_welfare_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->welfare_info_);
  }

  // optional .bean.FanInfo fan_info = 4;
  if (this->has_fan_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fan_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bean.LoginRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bean.LoginRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bean.LoginRsp)
    UnsafeMergeFrom(*source);
  }
}

void LoginRsp::MergeFrom(const LoginRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bean.LoginRsp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LoginRsp::UnsafeMergeFrom(const LoginRsp& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_user_info()) {
    mutable_user_info()->::bean::UserInfo::MergeFrom(from.user_info());
  }
  if (from.has_balance_info()) {
    mutable_balance_info()->::bean::BalanceInfo::MergeFrom(from.balance_info());
  }
  if (from.has_welfare_info()) {
    mutable_welfare_info()->::bean::WelfareInfo::MergeFrom(from.welfare_info());
  }
  if (from.has_fan_info()) {
    mutable_fan_info()->::bean::FanInfo::MergeFrom(from.fan_info());
  }
}

void LoginRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bean.LoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRsp::CopyFrom(const LoginRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bean.LoginRsp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LoginRsp::IsInitialized() const {

  return true;
}

void LoginRsp::Swap(LoginRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRsp::InternalSwap(LoginRsp* other) {
  std::swap(user_info_, other->user_info_);
  std::swap(balance_info_, other->balance_info_);
  std::swap(welfare_info_, other->welfare_info_);
  std::swap(fan_info_, other->fan_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginRsp_descriptor_;
  metadata.reflection = LoginRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRsp

// optional .bean.UserInfo user_info = 1;
bool LoginRsp::has_user_info() const {
  return this != internal_default_instance() && user_info_ != NULL;
}
void LoginRsp::clear_user_info() {
  if (GetArenaNoVirtual() == NULL && user_info_ != NULL) delete user_info_;
  user_info_ = NULL;
}
const ::bean::UserInfo& LoginRsp::user_info() const {
  // @@protoc_insertion_point(field_get:bean.LoginRsp.user_info)
  return user_info_ != NULL ? *user_info_
                         : *::bean::UserInfo::internal_default_instance();
}
::bean::UserInfo* LoginRsp::mutable_user_info() {
  
  if (user_info_ == NULL) {
    user_info_ = new ::bean::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:bean.LoginRsp.user_info)
  return user_info_;
}
::bean::UserInfo* LoginRsp::release_user_info() {
  // @@protoc_insertion_point(field_release:bean.LoginRsp.user_info)
  
  ::bean::UserInfo* temp = user_info_;
  user_info_ = NULL;
  return temp;
}
void LoginRsp::set_allocated_user_info(::bean::UserInfo* user_info) {
  delete user_info_;
  user_info_ = user_info;
  if (user_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bean.LoginRsp.user_info)
}

// optional .bean.BalanceInfo balance_info = 2;
bool LoginRsp::has_balance_info() const {
  return this != internal_default_instance() && balance_info_ != NULL;
}
void LoginRsp::clear_balance_info() {
  if (GetArenaNoVirtual() == NULL && balance_info_ != NULL) delete balance_info_;
  balance_info_ = NULL;
}
const ::bean::BalanceInfo& LoginRsp::balance_info() const {
  // @@protoc_insertion_point(field_get:bean.LoginRsp.balance_info)
  return balance_info_ != NULL ? *balance_info_
                         : *::bean::BalanceInfo::internal_default_instance();
}
::bean::BalanceInfo* LoginRsp::mutable_balance_info() {
  
  if (balance_info_ == NULL) {
    balance_info_ = new ::bean::BalanceInfo;
  }
  // @@protoc_insertion_point(field_mutable:bean.LoginRsp.balance_info)
  return balance_info_;
}
::bean::BalanceInfo* LoginRsp::release_balance_info() {
  // @@protoc_insertion_point(field_release:bean.LoginRsp.balance_info)
  
  ::bean::BalanceInfo* temp = balance_info_;
  balance_info_ = NULL;
  return temp;
}
void LoginRsp::set_allocated_balance_info(::bean::BalanceInfo* balance_info) {
  delete balance_info_;
  balance_info_ = balance_info;
  if (balance_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bean.LoginRsp.balance_info)
}

// optional .bean.WelfareInfo welfare_info = 3;
bool LoginRsp::has_welfare_info() const {
  return this != internal_default_instance() && welfare_info_ != NULL;
}
void LoginRsp::clear_welfare_info() {
  if (GetArenaNoVirtual() == NULL && welfare_info_ != NULL) delete welfare_info_;
  welfare_info_ = NULL;
}
const ::bean::WelfareInfo& LoginRsp::welfare_info() const {
  // @@protoc_insertion_point(field_get:bean.LoginRsp.welfare_info)
  return welfare_info_ != NULL ? *welfare_info_
                         : *::bean::WelfareInfo::internal_default_instance();
}
::bean::WelfareInfo* LoginRsp::mutable_welfare_info() {
  
  if (welfare_info_ == NULL) {
    welfare_info_ = new ::bean::WelfareInfo;
  }
  // @@protoc_insertion_point(field_mutable:bean.LoginRsp.welfare_info)
  return welfare_info_;
}
::bean::WelfareInfo* LoginRsp::release_welfare_info() {
  // @@protoc_insertion_point(field_release:bean.LoginRsp.welfare_info)
  
  ::bean::WelfareInfo* temp = welfare_info_;
  welfare_info_ = NULL;
  return temp;
}
void LoginRsp::set_allocated_welfare_info(::bean::WelfareInfo* welfare_info) {
  delete welfare_info_;
  welfare_info_ = welfare_info;
  if (welfare_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bean.LoginRsp.welfare_info)
}

// optional .bean.FanInfo fan_info = 4;
bool LoginRsp::has_fan_info() const {
  return this != internal_default_instance() && fan_info_ != NULL;
}
void LoginRsp::clear_fan_info() {
  if (GetArenaNoVirtual() == NULL && fan_info_ != NULL) delete fan_info_;
  fan_info_ = NULL;
}
const ::bean::FanInfo& LoginRsp::fan_info() const {
  // @@protoc_insertion_point(field_get:bean.LoginRsp.fan_info)
  return fan_info_ != NULL ? *fan_info_
                         : *::bean::FanInfo::internal_default_instance();
}
::bean::FanInfo* LoginRsp::mutable_fan_info() {
  
  if (fan_info_ == NULL) {
    fan_info_ = new ::bean::FanInfo;
  }
  // @@protoc_insertion_point(field_mutable:bean.LoginRsp.fan_info)
  return fan_info_;
}
::bean::FanInfo* LoginRsp::release_fan_info() {
  // @@protoc_insertion_point(field_release:bean.LoginRsp.fan_info)
  
  ::bean::FanInfo* temp = fan_info_;
  fan_info_ = NULL;
  return temp;
}
void LoginRsp::set_allocated_fan_info(::bean::FanInfo* fan_info) {
  delete fan_info_;
  fan_info_ = fan_info;
  if (fan_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bean.LoginRsp.fan_info)
}

inline const LoginRsp* LoginRsp::internal_default_instance() {
  return &LoginRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShopLocationReq::kLongitudeFieldNumber;
const int ShopLocationReq::kLatitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShopLocationReq::ShopLocationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ReturnData_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:bean.ShopLocationReq)
}

void ShopLocationReq::InitAsDefaultInstance() {
}

ShopLocationReq::ShopLocationReq(const ShopLocationReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bean.ShopLocationReq)
}

void ShopLocationReq::SharedCtor() {
  longitude_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latitude_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ShopLocationReq::~ShopLocationReq() {
  // @@protoc_insertion_point(destructor:bean.ShopLocationReq)
  SharedDtor();
}

void ShopLocationReq::SharedDtor() {
  longitude_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latitude_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShopLocationReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopLocationReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShopLocationReq_descriptor_;
}

const ShopLocationReq& ShopLocationReq::default_instance() {
  protobuf_InitDefaults_ReturnData_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ShopLocationReq> ShopLocationReq_default_instance_;

ShopLocationReq* ShopLocationReq::New(::google::protobuf::Arena* arena) const {
  ShopLocationReq* n = new ShopLocationReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShopLocationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bean.ShopLocationReq)
  longitude_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latitude_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ShopLocationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bean.ShopLocationReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string longitude = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_longitude()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->longitude().data(), this->longitude().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bean.ShopLocationReq.longitude"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_latitude;
        break;
      }

      // optional string latitude = 2;
      case 2: {
        if (tag == 18) {
         parse_latitude:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_latitude()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->latitude().data(), this->latitude().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bean.ShopLocationReq.latitude"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bean.ShopLocationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bean.ShopLocationReq)
  return false;
#undef DO_
}

void ShopLocationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bean.ShopLocationReq)
  // optional string longitude = 1;
  if (this->longitude().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->longitude().data(), this->longitude().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopLocationReq.longitude");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->longitude(), output);
  }

  // optional string latitude = 2;
  if (this->latitude().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->latitude().data(), this->latitude().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopLocationReq.latitude");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->latitude(), output);
  }

  // @@protoc_insertion_point(serialize_end:bean.ShopLocationReq)
}

::google::protobuf::uint8* ShopLocationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bean.ShopLocationReq)
  // optional string longitude = 1;
  if (this->longitude().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->longitude().data(), this->longitude().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopLocationReq.longitude");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->longitude(), target);
  }

  // optional string latitude = 2;
  if (this->latitude().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->latitude().data(), this->latitude().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopLocationReq.latitude");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->latitude(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bean.ShopLocationReq)
  return target;
}

size_t ShopLocationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bean.ShopLocationReq)
  size_t total_size = 0;

  // optional string longitude = 1;
  if (this->longitude().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->longitude());
  }

  // optional string latitude = 2;
  if (this->latitude().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->latitude());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopLocationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bean.ShopLocationReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ShopLocationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShopLocationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bean.ShopLocationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bean.ShopLocationReq)
    UnsafeMergeFrom(*source);
  }
}

void ShopLocationReq::MergeFrom(const ShopLocationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bean.ShopLocationReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ShopLocationReq::UnsafeMergeFrom(const ShopLocationReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.longitude().size() > 0) {

    longitude_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.longitude_);
  }
  if (from.latitude().size() > 0) {

    latitude_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.latitude_);
  }
}

void ShopLocationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bean.ShopLocationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopLocationReq::CopyFrom(const ShopLocationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bean.ShopLocationReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ShopLocationReq::IsInitialized() const {

  return true;
}

void ShopLocationReq::Swap(ShopLocationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShopLocationReq::InternalSwap(ShopLocationReq* other) {
  longitude_.Swap(&other->longitude_);
  latitude_.Swap(&other->latitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShopLocationReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShopLocationReq_descriptor_;
  metadata.reflection = ShopLocationReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShopLocationReq

// optional string longitude = 1;
void ShopLocationReq::clear_longitude() {
  longitude_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShopLocationReq::longitude() const {
  // @@protoc_insertion_point(field_get:bean.ShopLocationReq.longitude)
  return longitude_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopLocationReq::set_longitude(const ::std::string& value) {
  
  longitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.ShopLocationReq.longitude)
}
void ShopLocationReq::set_longitude(const char* value) {
  
  longitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.ShopLocationReq.longitude)
}
void ShopLocationReq::set_longitude(const char* value, size_t size) {
  
  longitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.ShopLocationReq.longitude)
}
::std::string* ShopLocationReq::mutable_longitude() {
  
  // @@protoc_insertion_point(field_mutable:bean.ShopLocationReq.longitude)
  return longitude_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShopLocationReq::release_longitude() {
  // @@protoc_insertion_point(field_release:bean.ShopLocationReq.longitude)
  
  return longitude_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopLocationReq::set_allocated_longitude(::std::string* longitude) {
  if (longitude != NULL) {
    
  } else {
    
  }
  longitude_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), longitude);
  // @@protoc_insertion_point(field_set_allocated:bean.ShopLocationReq.longitude)
}

// optional string latitude = 2;
void ShopLocationReq::clear_latitude() {
  latitude_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShopLocationReq::latitude() const {
  // @@protoc_insertion_point(field_get:bean.ShopLocationReq.latitude)
  return latitude_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopLocationReq::set_latitude(const ::std::string& value) {
  
  latitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.ShopLocationReq.latitude)
}
void ShopLocationReq::set_latitude(const char* value) {
  
  latitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.ShopLocationReq.latitude)
}
void ShopLocationReq::set_latitude(const char* value, size_t size) {
  
  latitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.ShopLocationReq.latitude)
}
::std::string* ShopLocationReq::mutable_latitude() {
  
  // @@protoc_insertion_point(field_mutable:bean.ShopLocationReq.latitude)
  return latitude_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShopLocationReq::release_latitude() {
  // @@protoc_insertion_point(field_release:bean.ShopLocationReq.latitude)
  
  return latitude_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopLocationReq::set_allocated_latitude(::std::string* latitude) {
  if (latitude != NULL) {
    
  } else {
    
  }
  latitude_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), latitude);
  // @@protoc_insertion_point(field_set_allocated:bean.ShopLocationReq.latitude)
}

inline const ShopLocationReq* ShopLocationReq::internal_default_instance() {
  return &ShopLocationReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShopLocationRsp_ShopInfo::kShopIdFieldNumber;
const int ShopLocationRsp_ShopInfo::kLongitudeFieldNumber;
const int ShopLocationRsp_ShopInfo::kLatitudeFieldNumber;
const int ShopLocationRsp_ShopInfo::kNameFieldNumber;
const int ShopLocationRsp_ShopInfo::kIconFieldNumber;
const int ShopLocationRsp_ShopInfo::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShopLocationRsp_ShopInfo::ShopLocationRsp_ShopInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ReturnData_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:bean.ShopLocationRsp.ShopInfo)
}

void ShopLocationRsp_ShopInfo::InitAsDefaultInstance() {
}

ShopLocationRsp_ShopInfo::ShopLocationRsp_ShopInfo(const ShopLocationRsp_ShopInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bean.ShopLocationRsp.ShopInfo)
}

void ShopLocationRsp_ShopInfo::SharedCtor() {
  longitude_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latitude_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shop_id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

ShopLocationRsp_ShopInfo::~ShopLocationRsp_ShopInfo() {
  // @@protoc_insertion_point(destructor:bean.ShopLocationRsp.ShopInfo)
  SharedDtor();
}

void ShopLocationRsp_ShopInfo::SharedDtor() {
  longitude_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latitude_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShopLocationRsp_ShopInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopLocationRsp_ShopInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShopLocationRsp_ShopInfo_descriptor_;
}

const ShopLocationRsp_ShopInfo& ShopLocationRsp_ShopInfo::default_instance() {
  protobuf_InitDefaults_ReturnData_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ShopLocationRsp_ShopInfo> ShopLocationRsp_ShopInfo_default_instance_;

ShopLocationRsp_ShopInfo* ShopLocationRsp_ShopInfo::New(::google::protobuf::Arena* arena) const {
  ShopLocationRsp_ShopInfo* n = new ShopLocationRsp_ShopInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShopLocationRsp_ShopInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:bean.ShopLocationRsp.ShopInfo)
  shop_id_ = GOOGLE_LONGLONG(0);
  longitude_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latitude_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ShopLocationRsp_ShopInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bean.ShopLocationRsp.ShopInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 shop_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shop_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_longitude;
        break;
      }

      // optional string longitude = 2;
      case 2: {
        if (tag == 18) {
         parse_longitude:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_longitude()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->longitude().data(), this->longitude().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bean.ShopLocationRsp.ShopInfo.longitude"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_latitude;
        break;
      }

      // optional string latitude = 3;
      case 3: {
        if (tag == 26) {
         parse_latitude:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_latitude()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->latitude().data(), this->latitude().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bean.ShopLocationRsp.ShopInfo.latitude"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // optional string name = 4;
      case 4: {
        if (tag == 34) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bean.ShopLocationRsp.ShopInfo.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_icon;
        break;
      }

      // optional string icon = 5;
      case 5: {
        if (tag == 42) {
         parse_icon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->icon().data(), this->icon().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bean.ShopLocationRsp.ShopInfo.icon"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_type;
        break;
      }

      // optional string type = 6;
      case 6: {
        if (tag == 50) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bean.ShopLocationRsp.ShopInfo.type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bean.ShopLocationRsp.ShopInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bean.ShopLocationRsp.ShopInfo)
  return false;
#undef DO_
}

void ShopLocationRsp_ShopInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bean.ShopLocationRsp.ShopInfo)
  // optional int64 shop_id = 1;
  if (this->shop_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shop_id(), output);
  }

  // optional string longitude = 2;
  if (this->longitude().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->longitude().data(), this->longitude().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopLocationRsp.ShopInfo.longitude");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->longitude(), output);
  }

  // optional string latitude = 3;
  if (this->latitude().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->latitude().data(), this->latitude().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopLocationRsp.ShopInfo.latitude");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->latitude(), output);
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopLocationRsp.ShopInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // optional string icon = 5;
  if (this->icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon().data(), this->icon().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopLocationRsp.ShopInfo.icon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->icon(), output);
  }

  // optional string type = 6;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopLocationRsp.ShopInfo.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:bean.ShopLocationRsp.ShopInfo)
}

::google::protobuf::uint8* ShopLocationRsp_ShopInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bean.ShopLocationRsp.ShopInfo)
  // optional int64 shop_id = 1;
  if (this->shop_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shop_id(), target);
  }

  // optional string longitude = 2;
  if (this->longitude().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->longitude().data(), this->longitude().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopLocationRsp.ShopInfo.longitude");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->longitude(), target);
  }

  // optional string latitude = 3;
  if (this->latitude().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->latitude().data(), this->latitude().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopLocationRsp.ShopInfo.latitude");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->latitude(), target);
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopLocationRsp.ShopInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // optional string icon = 5;
  if (this->icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon().data(), this->icon().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopLocationRsp.ShopInfo.icon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->icon(), target);
  }

  // optional string type = 6;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopLocationRsp.ShopInfo.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bean.ShopLocationRsp.ShopInfo)
  return target;
}

size_t ShopLocationRsp_ShopInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bean.ShopLocationRsp.ShopInfo)
  size_t total_size = 0;

  // optional int64 shop_id = 1;
  if (this->shop_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shop_id());
  }

  // optional string longitude = 2;
  if (this->longitude().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->longitude());
  }

  // optional string latitude = 3;
  if (this->latitude().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->latitude());
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string icon = 5;
  if (this->icon().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->icon());
  }

  // optional string type = 6;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopLocationRsp_ShopInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bean.ShopLocationRsp.ShopInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ShopLocationRsp_ShopInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShopLocationRsp_ShopInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bean.ShopLocationRsp.ShopInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bean.ShopLocationRsp.ShopInfo)
    UnsafeMergeFrom(*source);
  }
}

void ShopLocationRsp_ShopInfo::MergeFrom(const ShopLocationRsp_ShopInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bean.ShopLocationRsp.ShopInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ShopLocationRsp_ShopInfo::UnsafeMergeFrom(const ShopLocationRsp_ShopInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.shop_id() != 0) {
    set_shop_id(from.shop_id());
  }
  if (from.longitude().size() > 0) {

    longitude_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.longitude_);
  }
  if (from.latitude().size() > 0) {

    latitude_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.latitude_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.icon().size() > 0) {

    icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
}

void ShopLocationRsp_ShopInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bean.ShopLocationRsp.ShopInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopLocationRsp_ShopInfo::CopyFrom(const ShopLocationRsp_ShopInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bean.ShopLocationRsp.ShopInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ShopLocationRsp_ShopInfo::IsInitialized() const {

  return true;
}

void ShopLocationRsp_ShopInfo::Swap(ShopLocationRsp_ShopInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShopLocationRsp_ShopInfo::InternalSwap(ShopLocationRsp_ShopInfo* other) {
  std::swap(shop_id_, other->shop_id_);
  longitude_.Swap(&other->longitude_);
  latitude_.Swap(&other->latitude_);
  name_.Swap(&other->name_);
  icon_.Swap(&other->icon_);
  type_.Swap(&other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShopLocationRsp_ShopInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShopLocationRsp_ShopInfo_descriptor_;
  metadata.reflection = ShopLocationRsp_ShopInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShopLocationRsp::kShopInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShopLocationRsp::ShopLocationRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ReturnData_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:bean.ShopLocationRsp)
}

void ShopLocationRsp::InitAsDefaultInstance() {
}

ShopLocationRsp::ShopLocationRsp(const ShopLocationRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bean.ShopLocationRsp)
}

void ShopLocationRsp::SharedCtor() {
  _cached_size_ = 0;
}

ShopLocationRsp::~ShopLocationRsp() {
  // @@protoc_insertion_point(destructor:bean.ShopLocationRsp)
  SharedDtor();
}

void ShopLocationRsp::SharedDtor() {
}

void ShopLocationRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopLocationRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShopLocationRsp_descriptor_;
}

const ShopLocationRsp& ShopLocationRsp::default_instance() {
  protobuf_InitDefaults_ReturnData_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ShopLocationRsp> ShopLocationRsp_default_instance_;

ShopLocationRsp* ShopLocationRsp::New(::google::protobuf::Arena* arena) const {
  ShopLocationRsp* n = new ShopLocationRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShopLocationRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:bean.ShopLocationRsp)
  shop_info_.Clear();
}

bool ShopLocationRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bean.ShopLocationRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bean.ShopLocationRsp.ShopInfo shop_info = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_shop_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_shop_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_shop_info;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bean.ShopLocationRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bean.ShopLocationRsp)
  return false;
#undef DO_
}

void ShopLocationRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bean.ShopLocationRsp)
  // repeated .bean.ShopLocationRsp.ShopInfo shop_info = 1;
  for (unsigned int i = 0, n = this->shop_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->shop_info(i), output);
  }

  // @@protoc_insertion_point(serialize_end:bean.ShopLocationRsp)
}

::google::protobuf::uint8* ShopLocationRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bean.ShopLocationRsp)
  // repeated .bean.ShopLocationRsp.ShopInfo shop_info = 1;
  for (unsigned int i = 0, n = this->shop_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->shop_info(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bean.ShopLocationRsp)
  return target;
}

size_t ShopLocationRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bean.ShopLocationRsp)
  size_t total_size = 0;

  // repeated .bean.ShopLocationRsp.ShopInfo shop_info = 1;
  {
    unsigned int count = this->shop_info_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shop_info(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopLocationRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bean.ShopLocationRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ShopLocationRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShopLocationRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bean.ShopLocationRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bean.ShopLocationRsp)
    UnsafeMergeFrom(*source);
  }
}

void ShopLocationRsp::MergeFrom(const ShopLocationRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bean.ShopLocationRsp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ShopLocationRsp::UnsafeMergeFrom(const ShopLocationRsp& from) {
  GOOGLE_DCHECK(&from != this);
  shop_info_.MergeFrom(from.shop_info_);
}

void ShopLocationRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bean.ShopLocationRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopLocationRsp::CopyFrom(const ShopLocationRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bean.ShopLocationRsp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ShopLocationRsp::IsInitialized() const {

  return true;
}

void ShopLocationRsp::Swap(ShopLocationRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShopLocationRsp::InternalSwap(ShopLocationRsp* other) {
  shop_info_.UnsafeArenaSwap(&other->shop_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShopLocationRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShopLocationRsp_descriptor_;
  metadata.reflection = ShopLocationRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShopLocationRsp_ShopInfo

// optional int64 shop_id = 1;
void ShopLocationRsp_ShopInfo::clear_shop_id() {
  shop_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ShopLocationRsp_ShopInfo::shop_id() const {
  // @@protoc_insertion_point(field_get:bean.ShopLocationRsp.ShopInfo.shop_id)
  return shop_id_;
}
void ShopLocationRsp_ShopInfo::set_shop_id(::google::protobuf::int64 value) {
  
  shop_id_ = value;
  // @@protoc_insertion_point(field_set:bean.ShopLocationRsp.ShopInfo.shop_id)
}

// optional string longitude = 2;
void ShopLocationRsp_ShopInfo::clear_longitude() {
  longitude_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShopLocationRsp_ShopInfo::longitude() const {
  // @@protoc_insertion_point(field_get:bean.ShopLocationRsp.ShopInfo.longitude)
  return longitude_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopLocationRsp_ShopInfo::set_longitude(const ::std::string& value) {
  
  longitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.ShopLocationRsp.ShopInfo.longitude)
}
void ShopLocationRsp_ShopInfo::set_longitude(const char* value) {
  
  longitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.ShopLocationRsp.ShopInfo.longitude)
}
void ShopLocationRsp_ShopInfo::set_longitude(const char* value, size_t size) {
  
  longitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.ShopLocationRsp.ShopInfo.longitude)
}
::std::string* ShopLocationRsp_ShopInfo::mutable_longitude() {
  
  // @@protoc_insertion_point(field_mutable:bean.ShopLocationRsp.ShopInfo.longitude)
  return longitude_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShopLocationRsp_ShopInfo::release_longitude() {
  // @@protoc_insertion_point(field_release:bean.ShopLocationRsp.ShopInfo.longitude)
  
  return longitude_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopLocationRsp_ShopInfo::set_allocated_longitude(::std::string* longitude) {
  if (longitude != NULL) {
    
  } else {
    
  }
  longitude_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), longitude);
  // @@protoc_insertion_point(field_set_allocated:bean.ShopLocationRsp.ShopInfo.longitude)
}

// optional string latitude = 3;
void ShopLocationRsp_ShopInfo::clear_latitude() {
  latitude_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShopLocationRsp_ShopInfo::latitude() const {
  // @@protoc_insertion_point(field_get:bean.ShopLocationRsp.ShopInfo.latitude)
  return latitude_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopLocationRsp_ShopInfo::set_latitude(const ::std::string& value) {
  
  latitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.ShopLocationRsp.ShopInfo.latitude)
}
void ShopLocationRsp_ShopInfo::set_latitude(const char* value) {
  
  latitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.ShopLocationRsp.ShopInfo.latitude)
}
void ShopLocationRsp_ShopInfo::set_latitude(const char* value, size_t size) {
  
  latitude_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.ShopLocationRsp.ShopInfo.latitude)
}
::std::string* ShopLocationRsp_ShopInfo::mutable_latitude() {
  
  // @@protoc_insertion_point(field_mutable:bean.ShopLocationRsp.ShopInfo.latitude)
  return latitude_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShopLocationRsp_ShopInfo::release_latitude() {
  // @@protoc_insertion_point(field_release:bean.ShopLocationRsp.ShopInfo.latitude)
  
  return latitude_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopLocationRsp_ShopInfo::set_allocated_latitude(::std::string* latitude) {
  if (latitude != NULL) {
    
  } else {
    
  }
  latitude_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), latitude);
  // @@protoc_insertion_point(field_set_allocated:bean.ShopLocationRsp.ShopInfo.latitude)
}

// optional string name = 4;
void ShopLocationRsp_ShopInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShopLocationRsp_ShopInfo::name() const {
  // @@protoc_insertion_point(field_get:bean.ShopLocationRsp.ShopInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopLocationRsp_ShopInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.ShopLocationRsp.ShopInfo.name)
}
void ShopLocationRsp_ShopInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.ShopLocationRsp.ShopInfo.name)
}
void ShopLocationRsp_ShopInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.ShopLocationRsp.ShopInfo.name)
}
::std::string* ShopLocationRsp_ShopInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bean.ShopLocationRsp.ShopInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShopLocationRsp_ShopInfo::release_name() {
  // @@protoc_insertion_point(field_release:bean.ShopLocationRsp.ShopInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopLocationRsp_ShopInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bean.ShopLocationRsp.ShopInfo.name)
}

// optional string icon = 5;
void ShopLocationRsp_ShopInfo::clear_icon() {
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShopLocationRsp_ShopInfo::icon() const {
  // @@protoc_insertion_point(field_get:bean.ShopLocationRsp.ShopInfo.icon)
  return icon_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopLocationRsp_ShopInfo::set_icon(const ::std::string& value) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.ShopLocationRsp.ShopInfo.icon)
}
void ShopLocationRsp_ShopInfo::set_icon(const char* value) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.ShopLocationRsp.ShopInfo.icon)
}
void ShopLocationRsp_ShopInfo::set_icon(const char* value, size_t size) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.ShopLocationRsp.ShopInfo.icon)
}
::std::string* ShopLocationRsp_ShopInfo::mutable_icon() {
  
  // @@protoc_insertion_point(field_mutable:bean.ShopLocationRsp.ShopInfo.icon)
  return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShopLocationRsp_ShopInfo::release_icon() {
  // @@protoc_insertion_point(field_release:bean.ShopLocationRsp.ShopInfo.icon)
  
  return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopLocationRsp_ShopInfo::set_allocated_icon(::std::string* icon) {
  if (icon != NULL) {
    
  } else {
    
  }
  icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:bean.ShopLocationRsp.ShopInfo.icon)
}

// optional string type = 6;
void ShopLocationRsp_ShopInfo::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShopLocationRsp_ShopInfo::type() const {
  // @@protoc_insertion_point(field_get:bean.ShopLocationRsp.ShopInfo.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopLocationRsp_ShopInfo::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.ShopLocationRsp.ShopInfo.type)
}
void ShopLocationRsp_ShopInfo::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.ShopLocationRsp.ShopInfo.type)
}
void ShopLocationRsp_ShopInfo::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.ShopLocationRsp.ShopInfo.type)
}
::std::string* ShopLocationRsp_ShopInfo::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:bean.ShopLocationRsp.ShopInfo.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShopLocationRsp_ShopInfo::release_type() {
  // @@protoc_insertion_point(field_release:bean.ShopLocationRsp.ShopInfo.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopLocationRsp_ShopInfo::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:bean.ShopLocationRsp.ShopInfo.type)
}

inline const ShopLocationRsp_ShopInfo* ShopLocationRsp_ShopInfo::internal_default_instance() {
  return &ShopLocationRsp_ShopInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// ShopLocationRsp

// repeated .bean.ShopLocationRsp.ShopInfo shop_info = 1;
int ShopLocationRsp::shop_info_size() const {
  return shop_info_.size();
}
void ShopLocationRsp::clear_shop_info() {
  shop_info_.Clear();
}
const ::bean::ShopLocationRsp_ShopInfo& ShopLocationRsp::shop_info(int index) const {
  // @@protoc_insertion_point(field_get:bean.ShopLocationRsp.shop_info)
  return shop_info_.Get(index);
}
::bean::ShopLocationRsp_ShopInfo* ShopLocationRsp::mutable_shop_info(int index) {
  // @@protoc_insertion_point(field_mutable:bean.ShopLocationRsp.shop_info)
  return shop_info_.Mutable(index);
}
::bean::ShopLocationRsp_ShopInfo* ShopLocationRsp::add_shop_info() {
  // @@protoc_insertion_point(field_add:bean.ShopLocationRsp.shop_info)
  return shop_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::bean::ShopLocationRsp_ShopInfo >*
ShopLocationRsp::mutable_shop_info() {
  // @@protoc_insertion_point(field_mutable_list:bean.ShopLocationRsp.shop_info)
  return &shop_info_;
}
const ::google::protobuf::RepeatedPtrField< ::bean::ShopLocationRsp_ShopInfo >&
ShopLocationRsp::shop_info() const {
  // @@protoc_insertion_point(field_list:bean.ShopLocationRsp.shop_info)
  return shop_info_;
}

inline const ShopLocationRsp* ShopLocationRsp::internal_default_instance() {
  return &ShopLocationRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShopDetailReq::kShopIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShopDetailReq::ShopDetailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ReturnData_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:bean.ShopDetailReq)
}

void ShopDetailReq::InitAsDefaultInstance() {
}

ShopDetailReq::ShopDetailReq(const ShopDetailReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bean.ShopDetailReq)
}

void ShopDetailReq::SharedCtor() {
  shop_id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

ShopDetailReq::~ShopDetailReq() {
  // @@protoc_insertion_point(destructor:bean.ShopDetailReq)
  SharedDtor();
}

void ShopDetailReq::SharedDtor() {
}

void ShopDetailReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopDetailReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShopDetailReq_descriptor_;
}

const ShopDetailReq& ShopDetailReq::default_instance() {
  protobuf_InitDefaults_ReturnData_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ShopDetailReq> ShopDetailReq_default_instance_;

ShopDetailReq* ShopDetailReq::New(::google::protobuf::Arena* arena) const {
  ShopDetailReq* n = new ShopDetailReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShopDetailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bean.ShopDetailReq)
  shop_id_ = GOOGLE_LONGLONG(0);
}

bool ShopDetailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bean.ShopDetailReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 shop_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shop_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bean.ShopDetailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bean.ShopDetailReq)
  return false;
#undef DO_
}

void ShopDetailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bean.ShopDetailReq)
  // optional int64 shop_id = 1;
  if (this->shop_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shop_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:bean.ShopDetailReq)
}

::google::protobuf::uint8* ShopDetailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bean.ShopDetailReq)
  // optional int64 shop_id = 1;
  if (this->shop_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shop_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bean.ShopDetailReq)
  return target;
}

size_t ShopDetailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bean.ShopDetailReq)
  size_t total_size = 0;

  // optional int64 shop_id = 1;
  if (this->shop_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shop_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopDetailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bean.ShopDetailReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ShopDetailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShopDetailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bean.ShopDetailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bean.ShopDetailReq)
    UnsafeMergeFrom(*source);
  }
}

void ShopDetailReq::MergeFrom(const ShopDetailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bean.ShopDetailReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ShopDetailReq::UnsafeMergeFrom(const ShopDetailReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.shop_id() != 0) {
    set_shop_id(from.shop_id());
  }
}

void ShopDetailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bean.ShopDetailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopDetailReq::CopyFrom(const ShopDetailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bean.ShopDetailReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ShopDetailReq::IsInitialized() const {

  return true;
}

void ShopDetailReq::Swap(ShopDetailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShopDetailReq::InternalSwap(ShopDetailReq* other) {
  std::swap(shop_id_, other->shop_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShopDetailReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShopDetailReq_descriptor_;
  metadata.reflection = ShopDetailReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShopDetailReq

// optional int64 shop_id = 1;
void ShopDetailReq::clear_shop_id() {
  shop_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ShopDetailReq::shop_id() const {
  // @@protoc_insertion_point(field_get:bean.ShopDetailReq.shop_id)
  return shop_id_;
}
void ShopDetailReq::set_shop_id(::google::protobuf::int64 value) {
  
  shop_id_ = value;
  // @@protoc_insertion_point(field_set:bean.ShopDetailReq.shop_id)
}

inline const ShopDetailReq* ShopDetailReq::internal_default_instance() {
  return &ShopDetailReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShopDetailRsp_CommodityInfo::kIdFieldNumber;
const int ShopDetailRsp_CommodityInfo::kNameFieldNumber;
const int ShopDetailRsp_CommodityInfo::kIconUrlFieldNumber;
const int ShopDetailRsp_CommodityInfo::kIntroFieldNumber;
const int ShopDetailRsp_CommodityInfo::kOriginalPriceFieldNumber;
const int ShopDetailRsp_CommodityInfo::kDisPriceFieldNumber;
const int ShopDetailRsp_CommodityInfo::kDiscountFieldNumber;
const int ShopDetailRsp_CommodityInfo::kReturnCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShopDetailRsp_CommodityInfo::ShopDetailRsp_CommodityInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ReturnData_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:bean.ShopDetailRsp.CommodityInfo)
}

void ShopDetailRsp_CommodityInfo::InitAsDefaultInstance() {
}

ShopDetailRsp_CommodityInfo::ShopDetailRsp_CommodityInfo(const ShopDetailRsp_CommodityInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bean.ShopDetailRsp.CommodityInfo)
}

void ShopDetailRsp_CommodityInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  intro_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dis_price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  discount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  return_count_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

ShopDetailRsp_CommodityInfo::~ShopDetailRsp_CommodityInfo() {
  // @@protoc_insertion_point(destructor:bean.ShopDetailRsp.CommodityInfo)
  SharedDtor();
}

void ShopDetailRsp_CommodityInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  intro_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_price_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dis_price_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  discount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  return_count_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShopDetailRsp_CommodityInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopDetailRsp_CommodityInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShopDetailRsp_CommodityInfo_descriptor_;
}

const ShopDetailRsp_CommodityInfo& ShopDetailRsp_CommodityInfo::default_instance() {
  protobuf_InitDefaults_ReturnData_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ShopDetailRsp_CommodityInfo> ShopDetailRsp_CommodityInfo_default_instance_;

ShopDetailRsp_CommodityInfo* ShopDetailRsp_CommodityInfo::New(::google::protobuf::Arena* arena) const {
  ShopDetailRsp_CommodityInfo* n = new ShopDetailRsp_CommodityInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShopDetailRsp_CommodityInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:bean.ShopDetailRsp.CommodityInfo)
  id_ = GOOGLE_LONGLONG(0);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  intro_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  original_price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dis_price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  discount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  return_count_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ShopDetailRsp_CommodityInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bean.ShopDetailRsp.CommodityInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bean.ShopDetailRsp.CommodityInfo.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_icon_url;
        break;
      }

      // optional string icon_url = 3;
      case 3: {
        if (tag == 26) {
         parse_icon_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->icon_url().data(), this->icon_url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bean.ShopDetailRsp.CommodityInfo.icon_url"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_intro;
        break;
      }

      // optional string intro = 4;
      case 4: {
        if (tag == 34) {
         parse_intro:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_intro()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->intro().data(), this->intro().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bean.ShopDetailRsp.CommodityInfo.intro"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_original_price;
        break;
      }

      // optional string original_price = 5;
      case 5: {
        if (tag == 42) {
         parse_original_price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_original_price()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->original_price().data(), this->original_price().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bean.ShopDetailRsp.CommodityInfo.original_price"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_dis_price;
        break;
      }

      // optional string dis_price = 6;
      case 6: {
        if (tag == 50) {
         parse_dis_price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dis_price()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dis_price().data(), this->dis_price().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bean.ShopDetailRsp.CommodityInfo.dis_price"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_discount;
        break;
      }

      // optional string discount = 7;
      case 7: {
        if (tag == 58) {
         parse_discount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_discount()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->discount().data(), this->discount().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bean.ShopDetailRsp.CommodityInfo.discount"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_return_count;
        break;
      }

      // optional string return_count = 8;
      case 8: {
        if (tag == 66) {
         parse_return_count:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_return_count()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->return_count().data(), this->return_count().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bean.ShopDetailRsp.CommodityInfo.return_count"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bean.ShopDetailRsp.CommodityInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bean.ShopDetailRsp.CommodityInfo)
  return false;
#undef DO_
}

void ShopDetailRsp_CommodityInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bean.ShopDetailRsp.CommodityInfo)
  // optional int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopDetailRsp.CommodityInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string icon_url = 3;
  if (this->icon_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon_url().data(), this->icon_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopDetailRsp.CommodityInfo.icon_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->icon_url(), output);
  }

  // optional string intro = 4;
  if (this->intro().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->intro().data(), this->intro().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopDetailRsp.CommodityInfo.intro");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->intro(), output);
  }

  // optional string original_price = 5;
  if (this->original_price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->original_price().data(), this->original_price().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopDetailRsp.CommodityInfo.original_price");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->original_price(), output);
  }

  // optional string dis_price = 6;
  if (this->dis_price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dis_price().data(), this->dis_price().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopDetailRsp.CommodityInfo.dis_price");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->dis_price(), output);
  }

  // optional string discount = 7;
  if (this->discount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->discount().data(), this->discount().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopDetailRsp.CommodityInfo.discount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->discount(), output);
  }

  // optional string return_count = 8;
  if (this->return_count().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->return_count().data(), this->return_count().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopDetailRsp.CommodityInfo.return_count");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->return_count(), output);
  }

  // @@protoc_insertion_point(serialize_end:bean.ShopDetailRsp.CommodityInfo)
}

::google::protobuf::uint8* ShopDetailRsp_CommodityInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bean.ShopDetailRsp.CommodityInfo)
  // optional int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopDetailRsp.CommodityInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string icon_url = 3;
  if (this->icon_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon_url().data(), this->icon_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopDetailRsp.CommodityInfo.icon_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->icon_url(), target);
  }

  // optional string intro = 4;
  if (this->intro().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->intro().data(), this->intro().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopDetailRsp.CommodityInfo.intro");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->intro(), target);
  }

  // optional string original_price = 5;
  if (this->original_price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->original_price().data(), this->original_price().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopDetailRsp.CommodityInfo.original_price");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->original_price(), target);
  }

  // optional string dis_price = 6;
  if (this->dis_price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dis_price().data(), this->dis_price().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopDetailRsp.CommodityInfo.dis_price");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->dis_price(), target);
  }

  // optional string discount = 7;
  if (this->discount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->discount().data(), this->discount().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopDetailRsp.CommodityInfo.discount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->discount(), target);
  }

  // optional string return_count = 8;
  if (this->return_count().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->return_count().data(), this->return_count().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopDetailRsp.CommodityInfo.return_count");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->return_count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bean.ShopDetailRsp.CommodityInfo)
  return target;
}

size_t ShopDetailRsp_CommodityInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bean.ShopDetailRsp.CommodityInfo)
  size_t total_size = 0;

  // optional int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string icon_url = 3;
  if (this->icon_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->icon_url());
  }

  // optional string intro = 4;
  if (this->intro().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->intro());
  }

  // optional string original_price = 5;
  if (this->original_price().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->original_price());
  }

  // optional string dis_price = 6;
  if (this->dis_price().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dis_price());
  }

  // optional string discount = 7;
  if (this->discount().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->discount());
  }

  // optional string return_count = 8;
  if (this->return_count().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->return_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopDetailRsp_CommodityInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bean.ShopDetailRsp.CommodityInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ShopDetailRsp_CommodityInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShopDetailRsp_CommodityInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bean.ShopDetailRsp.CommodityInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bean.ShopDetailRsp.CommodityInfo)
    UnsafeMergeFrom(*source);
  }
}

void ShopDetailRsp_CommodityInfo::MergeFrom(const ShopDetailRsp_CommodityInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bean.ShopDetailRsp.CommodityInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ShopDetailRsp_CommodityInfo::UnsafeMergeFrom(const ShopDetailRsp_CommodityInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.icon_url().size() > 0) {

    icon_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_url_);
  }
  if (from.intro().size() > 0) {

    intro_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.intro_);
  }
  if (from.original_price().size() > 0) {

    original_price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_price_);
  }
  if (from.dis_price().size() > 0) {

    dis_price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dis_price_);
  }
  if (from.discount().size() > 0) {

    discount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.discount_);
  }
  if (from.return_count().size() > 0) {

    return_count_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.return_count_);
  }
}

void ShopDetailRsp_CommodityInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bean.ShopDetailRsp.CommodityInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopDetailRsp_CommodityInfo::CopyFrom(const ShopDetailRsp_CommodityInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bean.ShopDetailRsp.CommodityInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ShopDetailRsp_CommodityInfo::IsInitialized() const {

  return true;
}

void ShopDetailRsp_CommodityInfo::Swap(ShopDetailRsp_CommodityInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShopDetailRsp_CommodityInfo::InternalSwap(ShopDetailRsp_CommodityInfo* other) {
  std::swap(id_, other->id_);
  name_.Swap(&other->name_);
  icon_url_.Swap(&other->icon_url_);
  intro_.Swap(&other->intro_);
  original_price_.Swap(&other->original_price_);
  dis_price_.Swap(&other->dis_price_);
  discount_.Swap(&other->discount_);
  return_count_.Swap(&other->return_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShopDetailRsp_CommodityInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShopDetailRsp_CommodityInfo_descriptor_;
  metadata.reflection = ShopDetailRsp_CommodityInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShopDetailRsp::kTopIconUrlsFieldNumber;
const int ShopDetailRsp::kIntroFieldNumber;
const int ShopDetailRsp::kCommodityInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShopDetailRsp::ShopDetailRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ReturnData_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:bean.ShopDetailRsp)
}

void ShopDetailRsp::InitAsDefaultInstance() {
}

ShopDetailRsp::ShopDetailRsp(const ShopDetailRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:bean.ShopDetailRsp)
}

void ShopDetailRsp::SharedCtor() {
  intro_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ShopDetailRsp::~ShopDetailRsp() {
  // @@protoc_insertion_point(destructor:bean.ShopDetailRsp)
  SharedDtor();
}

void ShopDetailRsp::SharedDtor() {
  intro_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShopDetailRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopDetailRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShopDetailRsp_descriptor_;
}

const ShopDetailRsp& ShopDetailRsp::default_instance() {
  protobuf_InitDefaults_ReturnData_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ShopDetailRsp> ShopDetailRsp_default_instance_;

ShopDetailRsp* ShopDetailRsp::New(::google::protobuf::Arena* arena) const {
  ShopDetailRsp* n = new ShopDetailRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShopDetailRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:bean.ShopDetailRsp)
  intro_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  top_icon_urls_.Clear();
  commodity_info_.Clear();
}

bool ShopDetailRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bean.ShopDetailRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string top_icon_urls = 1;
      case 1: {
        if (tag == 10) {
         parse_top_icon_urls:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_top_icon_urls()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->top_icon_urls(this->top_icon_urls_size() - 1).data(),
            this->top_icon_urls(this->top_icon_urls_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bean.ShopDetailRsp.top_icon_urls"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_top_icon_urls;
        if (input->ExpectTag(18)) goto parse_intro;
        break;
      }

      // optional string intro = 2;
      case 2: {
        if (tag == 18) {
         parse_intro:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_intro()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->intro().data(), this->intro().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bean.ShopDetailRsp.intro"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_commodity_info;
        break;
      }

      // repeated .bean.ShopDetailRsp.CommodityInfo commodity_info = 3;
      case 3: {
        if (tag == 26) {
         parse_commodity_info:
          DO_(input->IncrementRecursionDepth());
         parse_loop_commodity_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_commodity_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_commodity_info;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bean.ShopDetailRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bean.ShopDetailRsp)
  return false;
#undef DO_
}

void ShopDetailRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bean.ShopDetailRsp)
  // repeated string top_icon_urls = 1;
  for (int i = 0; i < this->top_icon_urls_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->top_icon_urls(i).data(), this->top_icon_urls(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopDetailRsp.top_icon_urls");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->top_icon_urls(i), output);
  }

  // optional string intro = 2;
  if (this->intro().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->intro().data(), this->intro().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopDetailRsp.intro");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->intro(), output);
  }

  // repeated .bean.ShopDetailRsp.CommodityInfo commodity_info = 3;
  for (unsigned int i = 0, n = this->commodity_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->commodity_info(i), output);
  }

  // @@protoc_insertion_point(serialize_end:bean.ShopDetailRsp)
}

::google::protobuf::uint8* ShopDetailRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bean.ShopDetailRsp)
  // repeated string top_icon_urls = 1;
  for (int i = 0; i < this->top_icon_urls_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->top_icon_urls(i).data(), this->top_icon_urls(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopDetailRsp.top_icon_urls");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->top_icon_urls(i), target);
  }

  // optional string intro = 2;
  if (this->intro().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->intro().data(), this->intro().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bean.ShopDetailRsp.intro");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->intro(), target);
  }

  // repeated .bean.ShopDetailRsp.CommodityInfo commodity_info = 3;
  for (unsigned int i = 0, n = this->commodity_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->commodity_info(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bean.ShopDetailRsp)
  return target;
}

size_t ShopDetailRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bean.ShopDetailRsp)
  size_t total_size = 0;

  // optional string intro = 2;
  if (this->intro().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->intro());
  }

  // repeated string top_icon_urls = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->top_icon_urls_size());
  for (int i = 0; i < this->top_icon_urls_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->top_icon_urls(i));
  }

  // repeated .bean.ShopDetailRsp.CommodityInfo commodity_info = 3;
  {
    unsigned int count = this->commodity_info_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commodity_info(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopDetailRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bean.ShopDetailRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ShopDetailRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShopDetailRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bean.ShopDetailRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bean.ShopDetailRsp)
    UnsafeMergeFrom(*source);
  }
}

void ShopDetailRsp::MergeFrom(const ShopDetailRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bean.ShopDetailRsp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ShopDetailRsp::UnsafeMergeFrom(const ShopDetailRsp& from) {
  GOOGLE_DCHECK(&from != this);
  top_icon_urls_.UnsafeMergeFrom(from.top_icon_urls_);
  commodity_info_.MergeFrom(from.commodity_info_);
  if (from.intro().size() > 0) {

    intro_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.intro_);
  }
}

void ShopDetailRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bean.ShopDetailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopDetailRsp::CopyFrom(const ShopDetailRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bean.ShopDetailRsp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ShopDetailRsp::IsInitialized() const {

  return true;
}

void ShopDetailRsp::Swap(ShopDetailRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShopDetailRsp::InternalSwap(ShopDetailRsp* other) {
  top_icon_urls_.UnsafeArenaSwap(&other->top_icon_urls_);
  intro_.Swap(&other->intro_);
  commodity_info_.UnsafeArenaSwap(&other->commodity_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShopDetailRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShopDetailRsp_descriptor_;
  metadata.reflection = ShopDetailRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShopDetailRsp_CommodityInfo

// optional int64 id = 1;
void ShopDetailRsp_CommodityInfo::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ShopDetailRsp_CommodityInfo::id() const {
  // @@protoc_insertion_point(field_get:bean.ShopDetailRsp.CommodityInfo.id)
  return id_;
}
void ShopDetailRsp_CommodityInfo::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:bean.ShopDetailRsp.CommodityInfo.id)
}

// optional string name = 2;
void ShopDetailRsp_CommodityInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShopDetailRsp_CommodityInfo::name() const {
  // @@protoc_insertion_point(field_get:bean.ShopDetailRsp.CommodityInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopDetailRsp_CommodityInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.ShopDetailRsp.CommodityInfo.name)
}
void ShopDetailRsp_CommodityInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.ShopDetailRsp.CommodityInfo.name)
}
void ShopDetailRsp_CommodityInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.ShopDetailRsp.CommodityInfo.name)
}
::std::string* ShopDetailRsp_CommodityInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:bean.ShopDetailRsp.CommodityInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShopDetailRsp_CommodityInfo::release_name() {
  // @@protoc_insertion_point(field_release:bean.ShopDetailRsp.CommodityInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopDetailRsp_CommodityInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:bean.ShopDetailRsp.CommodityInfo.name)
}

// optional string icon_url = 3;
void ShopDetailRsp_CommodityInfo::clear_icon_url() {
  icon_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShopDetailRsp_CommodityInfo::icon_url() const {
  // @@protoc_insertion_point(field_get:bean.ShopDetailRsp.CommodityInfo.icon_url)
  return icon_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopDetailRsp_CommodityInfo::set_icon_url(const ::std::string& value) {
  
  icon_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.ShopDetailRsp.CommodityInfo.icon_url)
}
void ShopDetailRsp_CommodityInfo::set_icon_url(const char* value) {
  
  icon_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.ShopDetailRsp.CommodityInfo.icon_url)
}
void ShopDetailRsp_CommodityInfo::set_icon_url(const char* value, size_t size) {
  
  icon_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.ShopDetailRsp.CommodityInfo.icon_url)
}
::std::string* ShopDetailRsp_CommodityInfo::mutable_icon_url() {
  
  // @@protoc_insertion_point(field_mutable:bean.ShopDetailRsp.CommodityInfo.icon_url)
  return icon_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShopDetailRsp_CommodityInfo::release_icon_url() {
  // @@protoc_insertion_point(field_release:bean.ShopDetailRsp.CommodityInfo.icon_url)
  
  return icon_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopDetailRsp_CommodityInfo::set_allocated_icon_url(::std::string* icon_url) {
  if (icon_url != NULL) {
    
  } else {
    
  }
  icon_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon_url);
  // @@protoc_insertion_point(field_set_allocated:bean.ShopDetailRsp.CommodityInfo.icon_url)
}

// optional string intro = 4;
void ShopDetailRsp_CommodityInfo::clear_intro() {
  intro_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShopDetailRsp_CommodityInfo::intro() const {
  // @@protoc_insertion_point(field_get:bean.ShopDetailRsp.CommodityInfo.intro)
  return intro_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopDetailRsp_CommodityInfo::set_intro(const ::std::string& value) {
  
  intro_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.ShopDetailRsp.CommodityInfo.intro)
}
void ShopDetailRsp_CommodityInfo::set_intro(const char* value) {
  
  intro_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.ShopDetailRsp.CommodityInfo.intro)
}
void ShopDetailRsp_CommodityInfo::set_intro(const char* value, size_t size) {
  
  intro_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.ShopDetailRsp.CommodityInfo.intro)
}
::std::string* ShopDetailRsp_CommodityInfo::mutable_intro() {
  
  // @@protoc_insertion_point(field_mutable:bean.ShopDetailRsp.CommodityInfo.intro)
  return intro_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShopDetailRsp_CommodityInfo::release_intro() {
  // @@protoc_insertion_point(field_release:bean.ShopDetailRsp.CommodityInfo.intro)
  
  return intro_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopDetailRsp_CommodityInfo::set_allocated_intro(::std::string* intro) {
  if (intro != NULL) {
    
  } else {
    
  }
  intro_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), intro);
  // @@protoc_insertion_point(field_set_allocated:bean.ShopDetailRsp.CommodityInfo.intro)
}

// optional string original_price = 5;
void ShopDetailRsp_CommodityInfo::clear_original_price() {
  original_price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShopDetailRsp_CommodityInfo::original_price() const {
  // @@protoc_insertion_point(field_get:bean.ShopDetailRsp.CommodityInfo.original_price)
  return original_price_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopDetailRsp_CommodityInfo::set_original_price(const ::std::string& value) {
  
  original_price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.ShopDetailRsp.CommodityInfo.original_price)
}
void ShopDetailRsp_CommodityInfo::set_original_price(const char* value) {
  
  original_price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.ShopDetailRsp.CommodityInfo.original_price)
}
void ShopDetailRsp_CommodityInfo::set_original_price(const char* value, size_t size) {
  
  original_price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.ShopDetailRsp.CommodityInfo.original_price)
}
::std::string* ShopDetailRsp_CommodityInfo::mutable_original_price() {
  
  // @@protoc_insertion_point(field_mutable:bean.ShopDetailRsp.CommodityInfo.original_price)
  return original_price_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShopDetailRsp_CommodityInfo::release_original_price() {
  // @@protoc_insertion_point(field_release:bean.ShopDetailRsp.CommodityInfo.original_price)
  
  return original_price_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopDetailRsp_CommodityInfo::set_allocated_original_price(::std::string* original_price) {
  if (original_price != NULL) {
    
  } else {
    
  }
  original_price_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), original_price);
  // @@protoc_insertion_point(field_set_allocated:bean.ShopDetailRsp.CommodityInfo.original_price)
}

// optional string dis_price = 6;
void ShopDetailRsp_CommodityInfo::clear_dis_price() {
  dis_price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShopDetailRsp_CommodityInfo::dis_price() const {
  // @@protoc_insertion_point(field_get:bean.ShopDetailRsp.CommodityInfo.dis_price)
  return dis_price_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopDetailRsp_CommodityInfo::set_dis_price(const ::std::string& value) {
  
  dis_price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.ShopDetailRsp.CommodityInfo.dis_price)
}
void ShopDetailRsp_CommodityInfo::set_dis_price(const char* value) {
  
  dis_price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.ShopDetailRsp.CommodityInfo.dis_price)
}
void ShopDetailRsp_CommodityInfo::set_dis_price(const char* value, size_t size) {
  
  dis_price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.ShopDetailRsp.CommodityInfo.dis_price)
}
::std::string* ShopDetailRsp_CommodityInfo::mutable_dis_price() {
  
  // @@protoc_insertion_point(field_mutable:bean.ShopDetailRsp.CommodityInfo.dis_price)
  return dis_price_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShopDetailRsp_CommodityInfo::release_dis_price() {
  // @@protoc_insertion_point(field_release:bean.ShopDetailRsp.CommodityInfo.dis_price)
  
  return dis_price_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopDetailRsp_CommodityInfo::set_allocated_dis_price(::std::string* dis_price) {
  if (dis_price != NULL) {
    
  } else {
    
  }
  dis_price_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dis_price);
  // @@protoc_insertion_point(field_set_allocated:bean.ShopDetailRsp.CommodityInfo.dis_price)
}

// optional string discount = 7;
void ShopDetailRsp_CommodityInfo::clear_discount() {
  discount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShopDetailRsp_CommodityInfo::discount() const {
  // @@protoc_insertion_point(field_get:bean.ShopDetailRsp.CommodityInfo.discount)
  return discount_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopDetailRsp_CommodityInfo::set_discount(const ::std::string& value) {
  
  discount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.ShopDetailRsp.CommodityInfo.discount)
}
void ShopDetailRsp_CommodityInfo::set_discount(const char* value) {
  
  discount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.ShopDetailRsp.CommodityInfo.discount)
}
void ShopDetailRsp_CommodityInfo::set_discount(const char* value, size_t size) {
  
  discount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.ShopDetailRsp.CommodityInfo.discount)
}
::std::string* ShopDetailRsp_CommodityInfo::mutable_discount() {
  
  // @@protoc_insertion_point(field_mutable:bean.ShopDetailRsp.CommodityInfo.discount)
  return discount_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShopDetailRsp_CommodityInfo::release_discount() {
  // @@protoc_insertion_point(field_release:bean.ShopDetailRsp.CommodityInfo.discount)
  
  return discount_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopDetailRsp_CommodityInfo::set_allocated_discount(::std::string* discount) {
  if (discount != NULL) {
    
  } else {
    
  }
  discount_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), discount);
  // @@protoc_insertion_point(field_set_allocated:bean.ShopDetailRsp.CommodityInfo.discount)
}

// optional string return_count = 8;
void ShopDetailRsp_CommodityInfo::clear_return_count() {
  return_count_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShopDetailRsp_CommodityInfo::return_count() const {
  // @@protoc_insertion_point(field_get:bean.ShopDetailRsp.CommodityInfo.return_count)
  return return_count_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopDetailRsp_CommodityInfo::set_return_count(const ::std::string& value) {
  
  return_count_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.ShopDetailRsp.CommodityInfo.return_count)
}
void ShopDetailRsp_CommodityInfo::set_return_count(const char* value) {
  
  return_count_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.ShopDetailRsp.CommodityInfo.return_count)
}
void ShopDetailRsp_CommodityInfo::set_return_count(const char* value, size_t size) {
  
  return_count_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.ShopDetailRsp.CommodityInfo.return_count)
}
::std::string* ShopDetailRsp_CommodityInfo::mutable_return_count() {
  
  // @@protoc_insertion_point(field_mutable:bean.ShopDetailRsp.CommodityInfo.return_count)
  return return_count_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShopDetailRsp_CommodityInfo::release_return_count() {
  // @@protoc_insertion_point(field_release:bean.ShopDetailRsp.CommodityInfo.return_count)
  
  return return_count_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopDetailRsp_CommodityInfo::set_allocated_return_count(::std::string* return_count) {
  if (return_count != NULL) {
    
  } else {
    
  }
  return_count_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), return_count);
  // @@protoc_insertion_point(field_set_allocated:bean.ShopDetailRsp.CommodityInfo.return_count)
}

inline const ShopDetailRsp_CommodityInfo* ShopDetailRsp_CommodityInfo::internal_default_instance() {
  return &ShopDetailRsp_CommodityInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// ShopDetailRsp

// repeated string top_icon_urls = 1;
int ShopDetailRsp::top_icon_urls_size() const {
  return top_icon_urls_.size();
}
void ShopDetailRsp::clear_top_icon_urls() {
  top_icon_urls_.Clear();
}
const ::std::string& ShopDetailRsp::top_icon_urls(int index) const {
  // @@protoc_insertion_point(field_get:bean.ShopDetailRsp.top_icon_urls)
  return top_icon_urls_.Get(index);
}
::std::string* ShopDetailRsp::mutable_top_icon_urls(int index) {
  // @@protoc_insertion_point(field_mutable:bean.ShopDetailRsp.top_icon_urls)
  return top_icon_urls_.Mutable(index);
}
void ShopDetailRsp::set_top_icon_urls(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:bean.ShopDetailRsp.top_icon_urls)
  top_icon_urls_.Mutable(index)->assign(value);
}
void ShopDetailRsp::set_top_icon_urls(int index, const char* value) {
  top_icon_urls_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bean.ShopDetailRsp.top_icon_urls)
}
void ShopDetailRsp::set_top_icon_urls(int index, const char* value, size_t size) {
  top_icon_urls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bean.ShopDetailRsp.top_icon_urls)
}
::std::string* ShopDetailRsp::add_top_icon_urls() {
  // @@protoc_insertion_point(field_add_mutable:bean.ShopDetailRsp.top_icon_urls)
  return top_icon_urls_.Add();
}
void ShopDetailRsp::add_top_icon_urls(const ::std::string& value) {
  top_icon_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:bean.ShopDetailRsp.top_icon_urls)
}
void ShopDetailRsp::add_top_icon_urls(const char* value) {
  top_icon_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bean.ShopDetailRsp.top_icon_urls)
}
void ShopDetailRsp::add_top_icon_urls(const char* value, size_t size) {
  top_icon_urls_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bean.ShopDetailRsp.top_icon_urls)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ShopDetailRsp::top_icon_urls() const {
  // @@protoc_insertion_point(field_list:bean.ShopDetailRsp.top_icon_urls)
  return top_icon_urls_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ShopDetailRsp::mutable_top_icon_urls() {
  // @@protoc_insertion_point(field_mutable_list:bean.ShopDetailRsp.top_icon_urls)
  return &top_icon_urls_;
}

// optional string intro = 2;
void ShopDetailRsp::clear_intro() {
  intro_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ShopDetailRsp::intro() const {
  // @@protoc_insertion_point(field_get:bean.ShopDetailRsp.intro)
  return intro_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopDetailRsp::set_intro(const ::std::string& value) {
  
  intro_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bean.ShopDetailRsp.intro)
}
void ShopDetailRsp::set_intro(const char* value) {
  
  intro_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bean.ShopDetailRsp.intro)
}
void ShopDetailRsp::set_intro(const char* value, size_t size) {
  
  intro_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bean.ShopDetailRsp.intro)
}
::std::string* ShopDetailRsp::mutable_intro() {
  
  // @@protoc_insertion_point(field_mutable:bean.ShopDetailRsp.intro)
  return intro_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShopDetailRsp::release_intro() {
  // @@protoc_insertion_point(field_release:bean.ShopDetailRsp.intro)
  
  return intro_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShopDetailRsp::set_allocated_intro(::std::string* intro) {
  if (intro != NULL) {
    
  } else {
    
  }
  intro_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), intro);
  // @@protoc_insertion_point(field_set_allocated:bean.ShopDetailRsp.intro)
}

// repeated .bean.ShopDetailRsp.CommodityInfo commodity_info = 3;
int ShopDetailRsp::commodity_info_size() const {
  return commodity_info_.size();
}
void ShopDetailRsp::clear_commodity_info() {
  commodity_info_.Clear();
}
const ::bean::ShopDetailRsp_CommodityInfo& ShopDetailRsp::commodity_info(int index) const {
  // @@protoc_insertion_point(field_get:bean.ShopDetailRsp.commodity_info)
  return commodity_info_.Get(index);
}
::bean::ShopDetailRsp_CommodityInfo* ShopDetailRsp::mutable_commodity_info(int index) {
  // @@protoc_insertion_point(field_mutable:bean.ShopDetailRsp.commodity_info)
  return commodity_info_.Mutable(index);
}
::bean::ShopDetailRsp_CommodityInfo* ShopDetailRsp::add_commodity_info() {
  // @@protoc_insertion_point(field_add:bean.ShopDetailRsp.commodity_info)
  return commodity_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::bean::ShopDetailRsp_CommodityInfo >*
ShopDetailRsp::mutable_commodity_info() {
  // @@protoc_insertion_point(field_mutable_list:bean.ShopDetailRsp.commodity_info)
  return &commodity_info_;
}
const ::google::protobuf::RepeatedPtrField< ::bean::ShopDetailRsp_CommodityInfo >&
ShopDetailRsp::commodity_info() const {
  // @@protoc_insertion_point(field_list:bean.ShopDetailRsp.commodity_info)
  return commodity_info_;
}

inline const ShopDetailRsp* ShopDetailRsp::internal_default_instance() {
  return &ShopDetailRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace bean

// @@protoc_insertion_point(global_scope)
